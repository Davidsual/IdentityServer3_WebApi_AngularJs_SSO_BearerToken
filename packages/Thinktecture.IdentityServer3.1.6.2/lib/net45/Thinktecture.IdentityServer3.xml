<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Thinktecture.IdentityServer3</name>
    </assembly>
    <members>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.ILog">
            <summary>
            Simple interface that represent a logger.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.ILog.Log(Thinktecture.IdentityServer.Core.Logging.LogLevel,System.Func{System.String},System.Exception)">
            <summary>
            Log a message the specified log level.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="messageFunc">The message function.</param>
            <param name="exception">An optional exception.</param>
            <returns>true if the message was logged. Otherwise false.</returns>
            <remarks>
            Note to implementers: the message func should not be called if the loglevel is not enabled
            so as not to incur performance penalties.
            
            To check IsEnabled call Log with only LogLevel and check the return value, no event will be written
            </remarks>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.LogLevel">
            <summary>
            The log level.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.ILogProvider">
            <summary>
            Represents a way to get a <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/>
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.LogProvider">
            <summary>
            Provides a mechanism to create instances of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/> objects.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.LogProvider.For``1">
            <summary>
            Gets a logger for the specified type.
            </summary>
            <typeparam name="T">The type whose name will be used for the logger.</typeparam>
            <returns>An instance of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.LogProvider.GetCurrentClassLogger">
            <summary>
            Gets a logger for the current class.
            </summary>
            <returns>An instance of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.LogProvider.GetLogger(System.Type)">
            <summary>
            Gets a logger for the specified type.
            </summary>
            <param name="type">The type whose name will be used for the logger.</param>
            <returns>An instance of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.LogProvider.GetLogger(System.String)">
            <summary>
            Gets a logger with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>An instance of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.LogProvider.SetCurrentLogProvider(Thinktecture.IdentityServer.Core.Logging.ILogProvider)">
            <summary>
            Sets the current log provider.
            </summary>
            <param name="logProvider">The log provider.</param>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Logging.LogProviders.LoupeLogProvider.ProviderIsAvailableOverride">
            <summary>
            Gets or sets a value indicating whether [provider is available override]. Used in tests.
            </summary>
            <value>
            <c>true</c> if [provider is available override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.LogProviders.LoupeLogProvider.WriteDelegate">
            <summary>
            The form of the Loupe Log.Write method we're using
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.LogProviders.ColouredConsoleLogProvider.MessageFormatterDelegate">
            <summary>
            A delegate returning a formatted log message
            </summary>
            <param name="loggerName">The name of the Logger</param>
            <param name="level">The Log Level</param>
            <param name="message">The Log Message</param>
            <param name="e">The Exception, if there is one</param>
            <returns>A formatted Log Message string.</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.CookieSecureMode">
            <summary>
            Indicates if secure flag should be issued for a cookie.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Configuration.CookieSecureMode.SameAsRequest">
            <summary>
            The secure flag will be issued if the request is HTTPS.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Configuration.CookieSecureMode.Always">
            <summary>
            The secure flag will always be issued.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.EventsOptions">
            <summary>
            Configures events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EventsOptions.RaiseSuccessEvents">
            <summary>
            Gets or sets a value indicating whether to raise success events.
            </summary>
            <value>
              <c>true</c> if success event should be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EventsOptions.RaiseFailureEvents">
            <summary>
            Gets or sets a value indicating whether to raise failure events.
            </summary>
            <value>
              <c>true</c> if failure events should be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EventsOptions.RaiseInformationEvents">
            <summary>
            Gets or sets a value indicating whether to raise information events.
            </summary>
            <value>
            <c>true</c> if information events should be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EventsOptions.RaiseErrorEvents">
            <summary>
            Gets or sets a value indicating whether to raise error events.
            </summary>
            <value>
              <c>true</c> if error events should be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.X509CertificateDataProtector">
            <summary>
            X.509 certificate based data protector
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.IDataProtector">
            <summary>
            Models protecting data needed by the server (e.g. cookies).
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IDataProtector.Protect(System.Byte[],System.String)">
            <summary>
            Protects the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="entropy">The entropy.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IDataProtector.Unprotect(System.Byte[],System.String)">
            <summary>
            Unprotects the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="entropy">The entropy.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.X509CertificateDataProtector.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.X509CertificateDataProtector"/> class.
            </summary>
            <param name="certificate">The certificate.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.X509CertificateDataProtector.Protect(System.Byte[],System.String)">
            <summary>
            Protects the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="entropy">The entropy.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.X509CertificateDataProtector.Unprotect(System.Byte[],System.String)">
            <summary>
            Unprotects the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="entropy">The entropy.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.RevocationEndpointController">
            <summary>
            Implementation of RFC 7009 (http://tools.ietf.org/html/rfc7009)
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.LoggingOptions">
            <summary>
            Configures logging within IdentityServer.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.LoggingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.LoggingOptions"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.LoggingOptions.EnableWebApiDiagnostics">
            <summary>
            Gets or sets a value indicating whether web API diagnostics should be enabled.
            </summary>
            <value>
            <c>true</c> if web API diagnostics should be enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.LoggingOptions.WebApiDiagnosticsIsVerbose">
            <summary>
            Gets or sets a value indicating whether web API diagnostics logging should be set to verbose.
            </summary>
            <value>
            <c>true</c> if web API diagnostics logging shozld be verbose; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.LoggingOptions.EnableHttpLogging">
            <summary>
            Gets or sets a value indicating whether HTTP request/response logging is enabled
            </summary>
            <value>
              <c>true</c> if HTTP logging is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.LoggingOptions.IncludeSensitiveDataInLogs">
            <summary>
            Gets or sets a value indicating whether to include (potentially) personally identifiable information or other sensitive data in logs.
            </summary>
            <value>
              <c>true</c> if PII data should be included in logs; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions">
            <summary>
            Configures which endpoints are enabled or disabled.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableAuthorizeEndpoint">
            <summary>
            Gets or sets a value indicating whether the authorize endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the authorize endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableTokenEndpoint">
            <summary>
            Gets or sets a value indicating whether the token endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the token endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableUserInfoEndpoint">
            <summary>
            Gets or sets a value indicating whether the user info endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the user info endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableDiscoveryEndpoint">
            <summary>
            Gets or sets a value indicating whether the discovery document endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the disdovery document endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableAccessTokenValidationEndpoint">
            <summary>
            Gets or sets a value indicating whether the access token validation endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the access token validation endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableIdentityTokenValidationEndpoint">
            <summary>
            Gets or sets a value indicating whether the identity token validation endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the identity token validation endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableEndSessionEndpoint">
            <summary>
            Gets or sets a value indicating whether the end session endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the end session endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableClientPermissionsEndpoint">
            <summary>
            Gets or sets a value indicating whether the client permissions endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the client permissions endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableCspReportEndpoint">
            <summary>
            Gets or sets a value indicating whether the CSP report endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the CSP report endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableCheckSessionEndpoint">
            <summary>
            Gets or sets a value indicating whether the check session endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the check session endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.EndpointOptions.EnableTokenRevocationEndpoint">
            <summary>
            Gets or sets a value indicating whether the token revocation endpoint is enabled.
            </summary>
            <value>
            <c>true</c> if the token revocation endpoint is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.CheckSessionEndpointController">
            <summary>
            Check session iframe endpoint
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.CheckSessionEndpointController.Get">
            <summary>
            GET
            </summary>
            <returns>Check session iframe page</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.LoginDetails">
            <summary>
            Event details for login events
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.AuthenticationDetails">
            <summary>
            Event details for authentication events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.AuthenticationDetails.SubjectId">
            <summary>
            Gets or sets the subject identifier.
            </summary>
            <value>
            The subject identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.AuthenticationDetails.Name">
            <summary>
            Gets or sets the user's name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.LoginDetails.SignInId">
            <summary>
            Gets or sets the sign in identifier.
            </summary>
            <value>
            The sign in identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.LoginDetails.SignInMessage">
            <summary>
            Gets or sets the sign in message.
            </summary>
            <value>
            The sign in message.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.LoginDetails.PartialLogin">
            <summary>
            Gets or sets a value indicating whether login was a partial login.
            </summary>
            <value>
              <c>true</c> if is a partial login; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.ClientPermissionsRevokedDetails">
            <summary>
            Details for client permissions revoked event
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.ClientPermissionsRevokedDetails.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.ClientPermissionsRevokedDetails.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.ClientPermissionsRevokedDetails.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.CspReportDetails">
            <summary>
            Event details for CSP report events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.CspReportDetails.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.CspReportDetails.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.CspReportDetails.Report">
            <summary>
            Gets or sets the report.
            </summary>
            <value>
            The report.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.SigningCertificateDetail">
            <summary>
            Details class for signing certificate validation
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.SigningCertificateDetail.SigningCertificateName">
            <summary>
            Gets or sets the name of the signing certificate.
            </summary>
            <value>
            The name of the signing certificate.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.SigningCertificateDetail.SigningCertificateExpiration">
            <summary>
            Gets or sets the signing certificate expiration.
            </summary>
            <value>
            The signing certificate expiration.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.AccessTokenIssuedDetails">
            <summary>
            Details class for access token issued events
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.TokenIssuedDetailsBase">
            <summary>
            Details base class for issued token events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.TokenIssuedDetailsBase.SubjectId">
            <summary>
            Gets or sets the subject identifier.
            </summary>
            <value>
            The subject identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.TokenIssuedDetailsBase.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.TokenIssuedDetailsBase.Scopes">
            <summary>
            Gets or sets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.TokenIssuedDetailsBase.Lifetime">
            <summary>
            Gets or sets the lifetime.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.TokenIssuedDetailsBase.Claims">
            <summary>
            Gets or sets the claims.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.AccessTokenIssuedDetails.TokenType">
            <summary>
            Gets or sets the type of the access token.
            </summary>
            <value>
            The type of the token.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.LogoutDetails">
            <summary>
            Event details for logout events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.LogoutDetails.SignOutId">
            <summary>
            Gets or sets the sign out identifier.
            </summary>
            <value>
            The sign out identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.LogoutDetails.SignOutMessage">
            <summary>
            Gets or sets the sign out message.
            </summary>
            <value>
            The sign out message.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.Event`1">
            <summary>
            Models base class for events raised from IdentityServer.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Events.Event`1.#ctor(System.String,System.String,Thinktecture.IdentityServer.Core.Events.EventTypes,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Events.Event`1"/> class.
            </summary>
            <param name="category">The category.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="id">The identifier.</param>
            <param name="message">The message.</param>
            <exception cref="T:System.ArgumentNullException">category</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Events.Event`1.#ctor(System.String,System.String,Thinktecture.IdentityServer.Core.Events.EventTypes,System.Int32,`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Events.Event`1"/> class.
            </summary>
            <param name="category">The category.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="id">The identifier.</param>
            <param name="details">The details.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Events.Event`1.#ctor(System.String,System.String,Thinktecture.IdentityServer.Core.Events.EventTypes,System.Int32,System.Func{`0},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Events.Event`1"/> class.
            </summary>
            <param name="category">The category.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="id">The identifier.</param>
            <param name="detailsFunc">The details function.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Events.Event`1.Prepare">
            <summary>
            Allows event to defer data initialization until the event will be raised.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.DetailsFunc">
            <summary>
            Gets or sets the details function.
            </summary>
            <value>
            The details function.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.Category">
            <summary>
            Gets or sets the event category. <see cref="T:Thinktecture.IdentityServer.Core.Events.EventConstants.Categories"/> for a list of the defined categories.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.EventType">
            <summary>
            Gets or sets the event type.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.Id">
            <summary>
            Gets or sets the event identifier. <see cref="T:Thinktecture.IdentityServer.Core.Events.EventConstants.Ids"/> for the list of the defined identifiers.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.Message">
            <summary>
            Gets or sets the event message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.Details">
            <summary>
            Gets or sets the event details.
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.Event`1.Context">
            <summary>
            Gets or sets the event context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.AuthorizationCodeDetails">
            <summary>
            Details class for authorization code issued events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.AuthorizationCodeDetails.HandleId">
            <summary>
            Gets or sets the handle identifier.
            </summary>
            <value>
            The handle identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.AuthorizationCodeDetails.RedirectUri">
            <summary>
            Gets or sets the redirect URI.
            </summary>
            <value>
            The redirect URI.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.RefreshTokenDetails">
            <summary>
            Details class for refresh token issued events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.RefreshTokenDetails.HandleId">
            <summary>
            Gets or sets the handle identifier.
            </summary>
            <value>
            The handle identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.RefreshTokenDetails.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.RefreshTokenRefreshDetails">
            <summary>
            Details class for refresh token refresh events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.RefreshTokenRefreshDetails.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.RefreshTokenRefreshDetails.OldHandle">
            <summary>
            Gets or sets the old handle.
            </summary>
            <value>
            The old handle.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.RefreshTokenRefreshDetails.NewHandle">
            <summary>
            Gets or sets the new handle.
            </summary>
            <value>
            The new handle.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.RefreshTokenRefreshDetails.Lifetime">
            <summary>
            Gets or sets the lifetime.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.LocalLoginDetails">
            <summary>
            Event details for local login events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.LocalLoginDetails.LoginUserName">
            <summary>
            Gets or sets the name of the login user.
            </summary>
            <value>
            The name of the login user.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.HashExtensions">
            <summary>
            Extension methods for hashing strings
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.HashExtensions.Sha256(System.String)">
            <summary>
            Creates a SHA256 hash of the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>A hash</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.HashExtensions.Sha512(System.String)">
            <summary>
            Creates a SHA512 hash of the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>A hash</returns>
        </member>
        <member name="T:Microsoft.Security.Application.CodeCharts.CodeChartHelper">
            <summary>
            Helper functions to simplify range/safe enumerations.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.CodeChartHelper.GetRange(System.Int32,System.Int32,System.Func{System.Int32,System.Boolean})">
            <summary>
            Generates a range of numbers starting at <paramref name="min"/>, ending at <paramref name="max"/> and using any exclusions specified in the <paramref name="exclusionFilter"/>.
            </summary>
            <param name="min">The starting number.</param>
            <param name="max">The finishing number.</param>
            <param name="exclusionFilter">A function returning true for any number to be excluded.</param>
            <returns>An enumerable collection of integers starting at <paramref name="min"/> and ending at <paramref name="max"/>, with any exclusions specified.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.CodeChartHelper.GetRange(System.Int32,System.Int32)">
            <summary>
            Generates a range of numbers with no exclusions.
            </summary>
            <param name="min">The starting number.</param>
            <param name="max">The finishing number.</param>
            <returns>An enumerable collection of integers starting at <paramref name="min"/> and ending at <paramref name="max"/>.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.CodeCharts.Lower">
            <summary>
            Provides safe character positions for the lower section of the UTF code tables.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.IsFlagSet(Microsoft.Security.Application.LowerCodeCharts,Microsoft.Security.Application.LowerCodeCharts)">
            <summary>
            Determines if the specified flag is set.
            </summary>
            <param name="flags">The value to check.</param>
            <param name="flagToCheck">The flag to check for.</param>
            <returns>true if the flag is set, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.BasicLatin">
            <summary>
            Provides the safe characters for the Basic Latin code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Latin1Supplement">
            <summary>
            Provides the safe characters for the Latin 1 Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.LatinExtendedA">
            <summary>
            Provides the safe characters for the Latin Extended A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.LatinExtendedB">
            <summary>
            Provides the safe characters for the Latin Extended B code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.IpaExtensions">
            <summary>
            Provides the safe characters for the IPA Extensions code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.SpacingModifierLetters">
            <summary>
            Provides the safe characters for the Spacing Modifiers code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.CombiningDiacriticalMarks">
            <summary>
            Provides the safe characters for the Combining Diacritical Marks code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.GreekAndCoptic">
            <summary>
            Provides the safe characters for the Greek and Coptic code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Cyrillic">
            <summary>
            Provides the safe characters for the Cyrillic code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.CyrillicSupplement">
            <summary>
            Provides the safe characters for the Cyrillic Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Armenian">
            <summary>
            Provides the safe characters for the Armenian code table.
            </summary>
            <returns>The safe characters for the code table.</returns>        
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Hebrew">
            <summary>
            Provides the safe characters for the Hebrew code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Arabic">
            <summary>
            Provides the safe characters for the Arabic code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Syriac">
            <summary>
            Provides the safe characters for the Syriac code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.ArabicSupplement">
            <summary>
            Provides the safe characters for the Arabic Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Thaana">
            <summary>
            Provides the safe characters for the Thaana code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Nko">
            <summary>
            Provides the safe characters for the Nko code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Samaritan">
            <summary>
            Provides the safe characters for the Samaritan code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Devanagari">
            <summary>
            Provides the safe characters for the Devenagari code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Bengali">
            <summary>
            Provides the safe characters for the Bengali code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Gurmukhi">
            <summary>
            Provides the safe characters for the Gurmukhi code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Gujarati">
            <summary>
            Provides the safe characters for the Gujarati code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Oriya">
            <summary>
            Provides the safe characters for the Oriya code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Tamil">
            <summary>
            Provides the safe characters for the Tamil code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Telugu">
            <summary>
            Provides the safe characters for the Telugu code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Kannada">
            <summary>
            Provides the safe characters for the Kannada code table.
            </summary>
            <returns>The safe characters for the code table.</returns>        
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Malayalam">
            <summary>
            Provides the safe characters for the Malayalam code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Sinhala">
            <summary>
            Provides the safe characters for the Sinhala code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Thai">
            <summary>
            Provides the safe characters for the Thai code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Lao">
            <summary>
            Provides the safe characters for the Lao code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Lower.Tibetan">
            <summary>
            Provides the safe characters for the Tibetan code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.CodeCharts.LowerMiddle">
            <summary>
            Provides safe character positions for the lower middle section of the UTF code tables.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.IsFlagSet(Microsoft.Security.Application.LowerMidCodeCharts,Microsoft.Security.Application.LowerMidCodeCharts)">
            <summary>
            Determines if the specified flag is set.
            </summary>
            <param name="flags">The value to check.</param>
            <param name="flagToCheck">The flag to check for.</param>
            <returns>true if the flag is set, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Myanmar">
            <summary>
            Provides the safe characters for the Myanmar code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Georgian">
            <summary>
            Provides the safe characters for the Georgian code table.
            </summary>
            <returns>The safe characters for the code table.</returns>        
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.HangulJamo">
            <summary>
            Provides the safe characters for the Hangul Jamo code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Ethiopic">
            <summary>
            Provides the safe characters for the Ethiopic code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.EthiopicSupplement">
            <summary>
            Provides the safe characters for the Ethiopic Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Cherokee">
            <summary>
            Provides the safe characters for the Cherokee code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.UnifiedCanadianAboriginalSyllabics">
            <summary>
            Provides the safe characters for the Unified Canadian Aboriginal Syllabic code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Ogham">
            <summary>
            Provides the safe characters for the Ogham code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Runic">
            <summary>
            Provides the safe characters for the Runic code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Tagalog">
            <summary>
            Provides the safe characters for the Tagalog code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Hanunoo">
            <summary>
            Provides the safe characters for the Hanunoo code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Buhid">
            <summary>
            Provides the safe characters for the Buhid code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Tagbanwa">
            <summary>
            Provides the safe characters for the Tagbanwa code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Khmer">
            <summary>
            Provides the safe characters for the Khmer code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Mongolian">
            <summary>
            Provides the safe characters for the Mongolian code table.
            </summary>
            <returns>The safe characters for the code table.</returns> 
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.UnifiedCanadianAboriginalSyllabicsExtended">
            <summary>
            Provides the safe characters for the Unified Canadian Aboriginal Syllabic Extended code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Limbu">
            <summary>
            Provides the safe characters for the Limbu code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.TaiLe">
            <summary>
            Provides the safe characters for the Tai Le code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.NewTaiLue">
            <summary>
            Provides the safe characters for the New Tai Lue code table.
            </summary>
            <returns>The safe characters for the code table.</returns>          
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.KhmerSymbols">
            <summary>
            Provides the safe characters for the Khmer Symbols code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Buginese">
            <summary>
            Provides the safe characters for the Khmer Symbols code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.TaiTham">
            <summary>
            Provides the safe characters for the Tai Tham code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Balinese">
            <summary>
            Provides the safe characters for the Balinese code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Sudanese">
            <summary>
            Provides the safe characters for the Sudanese code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.Lepcha">
            <summary>
            Provides the safe characters for the Lepcha code table.
            </summary>
            <returns>The safe characters for the code table.</returns>   
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.OlChiki">
            <summary>
            Provides the safe characters for the Ol Chiki code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.VedicExtensions">
            <summary>
            Provides the safe characters for the Vedic Extensions code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.PhoneticExtensions">
            <summary>
            Provides the safe characters for the Phonetic Extensions code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.PhoneticExtensionsSupplement">
            <summary>
            Provides the safe characters for the Phonetic Extensions Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.CombiningDiacriticalMarksSupplement">
            <summary>
            Provides the safe characters for the Combining Diacritical Marks Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.LowerMiddle.LatinExtendedAdditional">
            <summary>
            Provides the safe characters for the Latin Extended Addition code table.
            </summary>
            <returns>The safe characters for the code table.</returns>  
        </member>
        <member name="T:Microsoft.Security.Application.CodeCharts.Middle">
            <summary>
            Provides safe character positions for the middle section of the UTF code tables.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.IsFlagSet(Microsoft.Security.Application.MidCodeCharts,Microsoft.Security.Application.MidCodeCharts)">
            <summary>
            Determines if the specified flag is set.
            </summary>
            <param name="flags">The value to check.</param>
            <param name="flagToCheck">The flag to check for.</param>
            <returns>true if the flag is set, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.GreekExtended">
            <summary>
            Provides the safe characters for the Greek Extended code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.GeneralPunctuation">
            <summary>
            Provides the safe characters for the General Punctuation code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.SuperscriptsAndSubscripts">
            <summary>
            Provides the safe characters for the Superscripts and subscripts code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.CurrencySymbols">
            <summary>
            Provides the safe characters for the Currency Symbols code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.CombiningDiacriticalMarksForSymbols">
            <summary>
            Provides the safe characters for the Combining Diacritrical Marks for Symbols code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.LetterlikeSymbols">
            <summary>
            Provides the safe characters for the Letterlike Symbols code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.NumberForms">
            <summary>
            Provides the safe characters for the Number Forms code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.Arrows">
            <summary>
            Provides the safe characters for the Arrows code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.MathematicalOperators">
            <summary>
            Provides the safe characters for the Mathematical Operators code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.MiscellaneousTechnical">
            <summary>
            Provides the safe characters for the Miscellaneous Technical code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.ControlPictures">
            <summary>
            Provides the safe characters for the Control Pictures code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.OpticalCharacterRecognition">
            <summary>
            Provides the safe characters for the OCR code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.EnclosedAlphanumerics">
            <summary>
            Provides the safe characters for the Enclosed Alphanumerics code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.BoxDrawing">
            <summary>
            Provides the safe characters for the Box Drawing code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.BlockElements">
            <summary>
            Provides the safe characters for the Block Elements code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.GeometricShapes">
            <summary>
            Provides the safe characters for the Geometric Shapes code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.MiscellaneousSymbols">
            <summary>
            Provides the safe characters for the Miscellaneous Symbols code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.Dingbats">
            <summary>
            Provides the safe characters for the Dingbats code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.MiscellaneousMathematicalSymbolsA">
            <summary>
            Provides the safe characters for the Miscellaneous Mathematical Symbols A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.SupplementalArrowsA">
            <summary>
            Provides the safe characters for the Supplemental Arrows A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.BraillePatterns">
            <summary>
            Provides the safe characters for the Braille Patterns code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.SupplementalArrowsB">
            <summary>
            Provides the safe characters for the Supplemental Arrows B code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.MiscellaneousMathematicalSymbolsB">
            <summary>
            Provides the safe characters for the Miscellaneous Mathematical Symbols B code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.SupplementalMathematicalOperators">
            <summary>
            Provides the safe characters for the Supplemental Mathematical Operators code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.MiscellaneousSymbolsAndArrows">
            <summary>
            Provides the safe characters for the Miscellaneous Symbols and Arrows code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.Glagolitic">
            <summary>
            Provides the safe characters for the Glagolitic code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.LatinExtendedC">
            <summary>
            Provides the safe characters for the Latin Extended C code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.Coptic">
            <summary>
            Provides the safe characters for the Coptic table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.GeorgianSupplement">
            <summary>
            Provides the safe characters for the Georgian Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.Tifinagh">
            <summary>
            Provides the safe characters for the Tifinagh code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Middle.EthiopicExtended">
            <summary>
            Provides the safe characters for the Ethiopic Extended code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.CodeCharts.Upper">
            <summary>
            Provides safe character positions for the upper section of the UTF code tables.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.IsFlagSet(Microsoft.Security.Application.UpperCodeCharts,Microsoft.Security.Application.UpperCodeCharts)">
            <summary>
            Determines if the specified flag is set.
            </summary>
            <param name="flags">The value to check.</param>
            <param name="flagToCheck">The flag to check for.</param>
            <returns>true if the flag is set, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.DevanagariExtended">
            <summary>
            Provides the safe characters for the Devanagari Extended code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.KayahLi">
            <summary>
            Provides the safe characters for the Kayah Li code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.Rejang">
            <summary>
            Provides the safe characters for the Rejang code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.HangulJamoExtendedA">
            <summary>
            Provides the safe characters for the Hangul Jamo Extended A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.Javanese">
            <summary>
            Provides the safe characters for the Javanese code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.Cham">
            <summary>
            Provides the safe characters for the Cham code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.MyanmarExtendedA">
            <summary>
            Provides the safe characters for the Myanmar Extended A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.TaiViet">
            <summary>
            Provides the safe characters for the Myanmar Extended A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.MeeteiMayek">
            <summary>
            Provides the safe characters for the Meetei Mayek code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.HangulSyllables">
            <summary>
            Provides the safe characters for the Hangul Syllables code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.HangulJamoExtendedB">
            <summary>
            Provides the safe characters for the Hangul Jamo Extended B code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.CjkCompatibilityIdeographs">
            <summary>
            Provides the safe characters for the CJK Compatibility Ideographs code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.AlphabeticPresentationForms">
            <summary>
            Provides the safe characters for the Alphabetic Presentation Forms code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.ArabicPresentationFormsA">
            <summary>
            Provides the safe characters for the Arabic Presentation Forms A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.VariationSelectors">
            <summary>
            Provides the safe characters for the Variation Selectors code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.VerticalForms">
            <summary>
            Provides the safe characters for the Vertical Forms code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.CombiningHalfMarks">
            <summary>
            Provides the safe characters for the Combining Half Marks code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.CjkCompatibilityForms">
            <summary>
            Provides the safe characters for the CJK Compatibility Forms code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.SmallFormVariants">
            <summary>
            Provides the safe characters for the Small Form Variants code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.ArabicPresentationFormsB">
            <summary>
            Provides the safe characters for the Arabic Presentation Forms B code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.HalfWidthAndFullWidthForms">
            <summary>
            Provides the safe characters for the Half Width and Full Width Forms code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.Upper.Specials">
            <summary>
            Provides the safe characters for the Specials code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.CodeCharts.UpperMiddle">
            <summary>
            Provides safe character positions for the upper middle section of the UTF code tables.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.IsFlagSet(Microsoft.Security.Application.UpperMidCodeCharts,Microsoft.Security.Application.UpperMidCodeCharts)">
            <summary>
            Determines if the specified flag is set.
            </summary>
            <param name="flags">The value to check.</param>
            <param name="flagToCheck">The flag to check for.</param>
            <returns>true if the flag is set, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CyrillicExtendedA">
            <summary>
            Provides the safe characters for the Cyrillic Extended A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.SupplementalPunctuation">
            <summary>
            Provides the safe characters for the Cyrillic Extended A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CjkRadicalsSupplement">
            <summary>
            Provides the safe characters for the CJK Radicals Supplement code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.KangxiRadicals">
            <summary>
            Provides the safe characters for the Kangxi Radicals code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.IdeographicDescriptionCharacters">
            <summary>
            Provides the safe characters for the Ideographic Description Characters code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CjkSymbolsAndPunctuation">
            <summary>
            Provides the safe characters for the CJK Symbols and Punctuation code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Hiragana">
            <summary>
            Provides the safe characters for the Hiragana code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Katakana">
            <summary>
            Provides the safe characters for the Hiragana code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Bopomofo">
            <summary>
            Provides the safe characters for the Bopomofo code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.HangulCompatibilityJamo">
            <summary>
            Provides the safe characters for the Hangul Compatibility Jamo code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Kanbun">
            <summary>
            Provides the safe characters for the Kanbun code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.BopomofoExtended">
            <summary>
            Provides the safe characters for the Bopomofo Extended code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CjkStrokes">
            <summary>
            Provides the safe characters for the CJK Strokes code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.KatakanaPhoneticExtensions">
            <summary>
            Provides the safe characters for the Katakana Phonetic Extensions code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.EnclosedCjkLettersAndMonths">
            <summary>
            Provides the safe characters for the Enclosed CJK Letters and Months code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CjkCompatibility">
            <summary>
            Provides the safe characters for the CJK Compatibility code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CjkUnifiedIdeographsExtensionA">
            <summary>
            Provides the safe characters for the CJK Unified Ideographs Extension A code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.YijingHexagramSymbols">
            <summary>
            Provides the safe characters for the Yijing Hexagram Symbols code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CjkUnifiedIdeographs">
            <summary>
            Provides the safe characters for the CJK Unified Ideographs code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.YiSyllables">
            <summary>
            Provides the safe characters for the Yi Syllables code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.YiRadicals">
            <summary>
            Provides the safe characters for the Yi Radicals code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Lisu">
            <summary>
            Provides the safe characters for the Lisu code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Vai">
            <summary>
            Provides the safe characters for the Vai code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CyrillicExtendedB">
            <summary>
            Provides the safe characters for the Cyrillic Extended B code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Bamum">
            <summary>
            Provides the safe characters for the Bamum code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.ModifierToneLetters">
            <summary>
            Provides the safe characters for the Modifier Tone Letters code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.LatinExtendedD">
            <summary>
            Provides the safe characters for the Latin Extended D code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.SylotiNagri">
            <summary>
            Provides the safe characters for the Syloti Nagri code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.CommonIndicNumberForms">
            <summary>
            Provides the safe characters for the Common Indic Number Forms code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Phagspa">
            <summary>
            Provides the safe characters for the Phags-pa code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.CodeCharts.UpperMiddle.Saurashtra">
            <summary>
            Provides the safe characters for the Saurashtra code table.
            </summary>
            <returns>The safe characters for the code table.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.EncoderUtil">
            <summary>
            Provides helper methods common to all Anti-XSS encoders.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.EncoderUtil.GetOutputStringBuilder(System.Int32,System.Int32)">
            <summary>
            Gets an appropriately-sized StringBuilder for the output of an encoding routine.
            </summary>
            <param name="inputLength">The length (in characters) of the input string.</param>
            <param name="worstCaseOutputCharsPerInputChar">The worst-case ratio of output characters per input character.</param>
            <returns>A StringBuilder appropriately-sized to hold the output string.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.SafeList">
            <summary>
            Provides safe list utility functions.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.Generate(System.Int32,Microsoft.Security.Application.SafeList.GenerateSafeValue)">
            <summary>
            Generates a new safe list of the specified size, using the specified function to produce safe values.
            </summary>
            <param name="length">The length of the safe list to generate.</param>
            <param name="generateSafeValue">The <see cref="T:Microsoft.Security.Application.SafeList.GenerateSafeValue"/> function to use.</param>
            <returns>A new safe list.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchUnicodeThrough(System.Char[][]@,Microsoft.Security.Application.LowerCodeCharts,Microsoft.Security.Application.LowerMidCodeCharts,Microsoft.Security.Application.MidCodeCharts,Microsoft.Security.Application.UpperMidCodeCharts,Microsoft.Security.Application.UpperCodeCharts)">
            <summary>
            Marks characters from the specified languages as safe.
            </summary>
            <param name="safeList">The safe list to punch holes in.</param>
            <param name="lowerCodeCharts">The combination of lower code charts to use.</param>
            <param name="lowerMidCodeCharts">The combination of lower mid code charts to use.</param>
            <param name="midCodeCharts">The combination of mid code charts to use.</param>
            <param name="upperMidCodeCharts">The combination of upper mid code charts to use.</param>
            <param name="upperCodeCharts">The combination of upper code charts to use.</param>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchSafeList(System.Char[][]@,System.Collections.IEnumerable)">
            <summary>
            Punches holes as necessary.
            </summary>
            <param name="safeList">The safe list to punch through.</param>
            <param name="whiteListedCharacters">The list of character positions to punch.</param>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.HashThenValueGenerator(System.Int32)">
            <summary>
            Generates a hash prefixed character array representing the specified value.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>#1</description></item>
            <item><term>10</term><description>#10</description></item>
            <item><term>100</term><description>#100</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.HashThenHexValueGenerator(System.Int32)">
            <summary>
            Generates a hash prefixed character array representing the specified value in hexadecimal.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>#1</description></item>
            <item><term>10</term><description>#0a</description></item>
            <item><term>100</term><description>#64</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PercentThenHexValueGenerator(System.Int32)">
            <summary>
            Generates a percent prefixed character array representing the specified value in hexadecimal.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>%01</description></item>
            <item><term>10</term><description>%0a</description></item>
            <item><term>100</term><description>%64</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.SlashThenHexValueGenerator(System.Int32)">
            <summary>
            Generates a slash prefixed character array representing the specified value in hexadecimal.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>\01</description></item>
            <item><term>10</term><description>\0a</description></item>
            <item><term>100</term><description>\64</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.SlashThenSixDigitHexValueGenerator(System.Int32)">
            <summary>
            Generates a slash prefixed character array representing the specified value in hexadecimal.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>\000001</description></item>
            <item><term>10</term><description>\000000A</description></item>
            <item><term>100</term><description>\000064</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.StringToCharArrayWithHashPrefix(System.String)">
            <summary>
            Generates a hash prefixed character array from the specified string.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>#1</description></item>
            <item><term>10</term><description>#10</description></item>
            <item><term>100</term><description>#100</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.StringToCharArrayWithPercentPrefix(System.String)">
            <summary>
            Generates a percent prefixed character array from the specified string.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>%1</description></item>
            <item><term>10</term><description>%10</description></item>
            <item><term>100</term><description>%100</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.StringToCharArrayWithSlashPrefix(System.String)">
            <summary>
            Generates a slash prefixed character array from the specified string.
            </summary>
            <param name="value">The source value.</param>
            <returns>A character array representing the specified value.</returns>
            <remarks>
            Example inputs and encoded outputs:
            <list type="table">
            <item><term>1</term><description>\1</description></item>
            <item><term>10</term><description>\10</description></item>
            <item><term>100</term><description>\100</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.StringToCharArrayWithPrefix(System.String,System.Char)">
            <summary>
            Generates a prefixed character array from the specified string and prefix.
            </summary>
            <param name="value">The source value.</param>
            <param name="prefix">The prefix to use.</param>
            <returns>A prefixed character array representing the specified value.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchCodeCharts(System.Char[][]@,Microsoft.Security.Application.LowerCodeCharts)">
            <summary>
            Punch appropriate holes for the selected code charts.
            </summary>
            <param name="safeList">The safe list to punch through.</param>
            <param name="codeCharts">The code charts to punch.</param>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchCodeCharts(System.Char[][]@,Microsoft.Security.Application.LowerMidCodeCharts)">
            <summary>
            Punch appropriate holes for the selected code charts.
            </summary>
            <param name="safeList">The safe list to punch through.</param>
            <param name="codeCharts">The code charts to punch.</param>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchCodeCharts(System.Char[][]@,Microsoft.Security.Application.MidCodeCharts)">
            <summary>
            Punch appropriate holes for the selected code charts.
            </summary>
            <param name="safeList">The safe list to punch through.</param>
            <param name="codeCharts">The code charts to punch.</param>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchCodeCharts(System.Char[][]@,Microsoft.Security.Application.UpperMidCodeCharts)">
            <summary>
            Punch appropriate holes for the selected code charts.
            </summary>
            <param name="safeList">The safe list to punch through.</param>
            <param name="codeCharts">The code charts to punch.</param>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchCodeCharts(System.Char[][]@,Microsoft.Security.Application.UpperCodeCharts)">
            <summary>
            Punch appropriate holes for the selected code charts.
            </summary>
            <param name="safeList">The safe list to punch through.</param>
            <param name="codeCharts">The code charts to punch.</param>
        </member>
        <member name="M:Microsoft.Security.Application.SafeList.PunchHolesIfNeeded(System.Char[][]@,System.Boolean,System.Collections.IEnumerable)">
            <summary>
            Punches holes as necessary.
            </summary>
            <param name="safeList">The safe list to punch through.</param>
            <param name="needed">Value indicating whether the holes should be punched.</param>
            <param name="whiteListedCharacters">The list of character positions to punch.</param>
        </member>
        <member name="T:Microsoft.Security.Application.SafeList.GenerateSafeValue">
            <summary>
            Generates a safe character array representing the specified value.
            </summary>
            <returns>A safe character array representing the specified value.</returns>
            <param name="value">The value to generate a safe representation for.</param>
        </member>
        <member name="T:Microsoft.Security.Application.UnicodeCharacterEncoder">
            <summary>
            Provides HTML encoding methods.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.UnicodeSpace">
            <summary>
            The HTML escaped value for a space, used in attribute encoding.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.UnicodeApostrophe">
            <summary>
            The Unicode value for an apostrophe, used in attribute encoding.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.XmlApostrophe">
            <summary>
            The XML named entity for an apostrophe, used in XML encoding.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.currentLowerCodeChartSettings">
            <summary>
            The current lower code chart settings.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.currentLowerMidCodeChartSettings">
            <summary>
            The current lower middle code chart settings.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.currentMidCodeChartSettings">
            <summary>
            The current middle code chart settings.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.currentUpperMidCodeChartSettings">
            <summary>
            The current upper middle code chart settings.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.currentUpperCodeChartSettings">
            <summary>
            The current upper code chart settings.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.characterValues">
            <summary>
            The values to output for each character.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.namedEntitiesLazy">
            <summary>
            The values to output for HTML named entities.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UnicodeCharacterEncoder.SyncLock">
            <summary>
            Lock object
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.AcquireReadLock">
            <summary>
            Acquires a read lock.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.ReleaseReadLock">
            <summary>
            Releases a read lock.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.AcquireWriteLock">
            <summary>
            Acquires a write lock.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.ReleaseWriteLock">
            <summary>
            Releases a write lock.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.MarkAsSafe(Microsoft.Security.Application.LowerCodeCharts,Microsoft.Security.Application.LowerMidCodeCharts,Microsoft.Security.Application.MidCodeCharts,Microsoft.Security.Application.UpperMidCodeCharts,Microsoft.Security.Application.UpperCodeCharts)">
            <summary>
            Marks characters from the specified languages as safe.
            </summary>
            <param name="lowerCodeCharts">The combination of lower code charts to use.</param>
            <param name="lowerMidCodeCharts">The combination of lower mid code charts to use.</param>
            <param name="midCodeCharts">The combination of mid code charts to use.</param>
            <param name="upperMidCodeCharts">The combination of upper mid code charts to use.</param>
            <param name="upperCodeCharts">The combination of upper code charts to use.</param>
            <remarks>The safe list affects all HTML and XML encoding functions.</remarks>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.XmlEncode(System.String)">
            <summary>
            Encodes input strings for use in XML.
            </summary>
            <param name="input">String to be encoded</param>
            <returns>
            Encoded string for use in XML.
            </returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.XmlAttributeEncode(System.String)">
            <summary>
            Encodes input strings for use in XML.
            </summary>
            <param name="input">String to be encoded</param>
            <returns>
            Encoded string for use in XML.
            </returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.HtmlAttributeEncode(System.String)">
            <summary>
            Encodes input strings for use in HTML attributes.
            </summary>
            <param name="input">String to be encoded</param>
            <returns>
            Encoded string for use in HTML attributes.
            </returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.HtmlEncode(System.String,System.Boolean)">
            <summary>
            Encodes input strings for use in HTML.
            </summary>
            <param name="input">String to be encoded</param>
            <param name="useNamedEntities">Value indicating if the HTML 4.0 named entities should be used.</param>
            <returns>
            Encoded string for use in HTML.
            </returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.ApplyHtmlSpecificValues">
            <summary>
            Applies Html specific values to the internal value list.
            </summary>
            <remarks>
            ASP.NET 4 and Razor introduced a new syntax &lt;%: %&gt; and @ which are used to HTML-encode values.
            For example, &lt;%: foo %&gt; is shorthand for &lt;%= HttpUtility.HtmlEncode(foo) %&gt;. Since these could
            occur inside an attribute, e.g. &lt;a href="@Foo"&gt;, ASP.NET mandates that HtmlEncode also encode
            characters that are meaningful inside HTML attributes, like the single quote. Encoding spaces
            isn't mandatory since it's expected that users will surround such variables with quotes.
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.HtmlAttributeTweak(System.Char,System.Char[]@)">
            <summary>
            HTML Attribute Encoding specific tweaks.
            </summary>
            <param name="input">The character to potentially encode.</param>
            <param name="output">The encoded character, if any.</param>
            <returns>True if encoding took place, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.XmlTweak(System.Char,System.Char[]@)">
            <summary>
            XML specific tweaks.
            </summary>
            <param name="input">The character to potentially encode.</param>
            <param name="output">The encoded character, if any.</param>
            <returns>True if encoding took place, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.XmlAttributeTweak(System.Char,System.Char[]@)">
            <summary>
            XML Attribute Encoding specific tweaks.
            </summary>
            <param name="input">The character to potentially encode.</param>
            <param name="output">The encoded character, if any.</param>
            <returns>True if encoding took place, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.HtmlEncode(System.String,System.Boolean,Microsoft.Security.Application.UnicodeCharacterEncoder.MethodSpecificEncoder)">
            <summary>
            Encodes input strings for use in HTML.
            </summary>
            <param name="input">String to be encoded</param>
            <param name="useNamedEntities">Value indicating if the HTML 4.0 named entities should be used.</param>
            <param name="encoderTweak">A <see cref="T:Microsoft.Security.Application.UnicodeCharacterEncoder.MethodSpecificEncoder"/> function, if needed.</param>
            <returns>
            Encoded string for use in HTML.
            </returns>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.InitialiseSafeList">
            <summary>
            Initializes the HTML safe list.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.UnicodeCharacterEncoder.InitialiseNamedEntityList">
            <summary>
            Initializes the HTML named entities list.
            </summary>
            <returns>The HTML named entities list.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.UnicodeCharacterEncoder.MethodSpecificEncoder">
            <summary>
            Provides method specific encoding of characters.
            </summary>
            <param name="input">The character to encode</param>
            <param name="output">The encoded character, if it has been encoded.</param>
            <returns>True if the character has been encoded, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Security.Application.LowerCodeCharts">
            <summary>
            Values for the lowest section of the UTF8 Unicode code tables, from U0000 to U0FFF.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.None">
            <summary>
            No code charts from the lower region of the Unicode tables are safe-listed.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.BasicLatin">
            <summary>
            The Basic Latin code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0000.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.C1ControlsAndLatin1Supplement">
            <summary>
            The C1 Controls and Latin-1 Supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0080.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.LatinExtendedA">
            <summary>
            The Latin Extended-A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0100.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.LatinExtendedB">
            <summary>
            The Latin Extended-B code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0180.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.IpaExtensions">
            <summary>
            The IPA Extensions code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0250.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.SpacingModifierLetters">
            <summary>
            The Spacing Modifier Letters code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U02B0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.CombiningDiacriticalMarks">
            <summary>
            The Combining Diacritical Marks code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0300.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.GreekAndCoptic">
            <summary>
            The Greek and Coptic code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0370.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Cyrillic">
            <summary>
            The Cyrillic code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0400.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.CyrillicSupplement">
            <summary>
            The Cyrillic Supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0500.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Armenian">
            <summary>
            The Armenian code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0530.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Hebrew">
            <summary>
            The Hebrew code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0590.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Arabic">
            <summary>
            The Arabic code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0600.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Syriac">
            <summary>
            The Syriac code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0700.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.ArabicSupplement">
            <summary>
            The Arabic Supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0750.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Thaana">
            <summary>
            The Thaana code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0780.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Nko">
            <summary>
            The Nko code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U07C0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Samaritan">
            <summary>
            The Samaritan code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0800.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Devanagari">
            <summary>
            The Devanagari code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0900.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Bengali">
            <summary>
            The Bengali code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0980.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Gurmukhi">
            <summary>
            The Gurmukhi code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0A00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Gujarati">
            <summary>
            The Gujarati code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0A80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Oriya">
            <summary>
            The Oriya code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0B00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Tamil">
            <summary>
            The Tamil code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0B80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Telugu">
            <summary>
            The Telugu code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0C00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Kannada">
            <summary>
            The Kannada code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0C80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Malayalam">
            <summary>
            The Malayalam code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0D00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Sinhala">
            <summary>
            The Sinhala code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0D80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Thai">
            <summary>
            The Thai code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0E00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Lao">
            <summary>
            The Lao code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0E80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Tibetan">
            <summary>
            The Tibetan code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U0F00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerCodeCharts.Default">
            <summary>
            The default code tables marked as safe on initialisation.
            </summary>
        </member>
        <member name="T:Microsoft.Security.Application.LowerMidCodeCharts">
            <summary>
            Values for the lower-mid section of the UTF8 Unicode code tables, from U1000 to U1EFF.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.None">
            <summary>
            No code charts from the lower-mid region of the Unicode tables are safe-listed.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Myanmar">
            <summary>
            The Myanmar code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1000.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Georgian">
            <summary>
            The Georgian code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U10A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.HangulJamo">
            <summary>
            The Hangul Jamo code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1100.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Ethiopic">
            <summary>
            The Ethiopic code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1200.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.EthiopicSupplement">
            <summary>
            The Ethiopic supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1380.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Cherokee">
            <summary>
            The Cherokee code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U13A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.UnifiedCanadianAboriginalSyllabics">
            <summary>
            The Unified Canadian Aboriginal Syllabics code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1400.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Ogham">
            <summary>
            The Ogham code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1680.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Runic">
            <summary>
            The Runic code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U16A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Tagalog">
            <summary>
            The Tagalog code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1700.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Hanunoo">
            <summary>
            The Hanunoo code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1720.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Buhid">
            <summary>
            The Buhid code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1740.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Tagbanwa">
            <summary>
            The Tagbanwa code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1760.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Khmer">
            <summary>
            The Khmer code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1780.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Mongolian">
            <summary>
            The Mongolian code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1800.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.UnifiedCanadianAboriginalSyllabicsExtended">
            <summary>
            The Unified Canadian Aboriginal Syllabics Extended code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U18B0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Limbu">
            <summary>
            The Limbu code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1900.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.TaiLe">
            <summary>
            The Tai Le code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1950.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.NewTaiLue">
            <summary>
            The New Tai Lue code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1980.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.KhmerSymbols">
            <summary>
            The Khmer Symbols code table
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U19E0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Buginese">
            <summary>
            The Buginese code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1A00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.TaiTham">
            <summary>
            The Tai Tham code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1A20.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Balinese">
            <summary>
            The Balinese code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1B00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Sudanese">
            <summary>
            The Sudanese code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1B80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.Lepcha">
            <summary>
            The Lepcha code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1C00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.OlChiki">
            <summary>
            The Ol Chiki code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1C50.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.VedicExtensions">
            <summary>
            The Vedic Extensions code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1CD0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.PhoneticExtensions">
            <summary>
            The Phonetic Extensions code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1D00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.PhoneticExtensionsSupplement">
            <summary>
            The Phonetic Extensions Supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1D80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.CombiningDiacriticalMarksSupplement">
            <summary>
            The Combining Diacritical Marks Supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1DC0.pdf</remarks>        
        </member>
        <member name="F:Microsoft.Security.Application.LowerMidCodeCharts.LatinExtendedAdditional">
            <summary>
            The Latin Extended Additional code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1E00.pdf</remarks>
        </member>
        <member name="T:Microsoft.Security.Application.MidCodeCharts">
            <summary>
            Values for the middle section of the UTF8 Unicode code tables, from U1F00 to U2DDF
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.None">
            <summary>
            No code charts from the lower region of the Unicode tables are safe-listed.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.GreekExtended">
            <summary>
            The Greek Extended code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U1F00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.GeneralPunctuation">
            <summary>
            The General Punctuation code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2000.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.SuperscriptsAndSubscripts">
            <summary>
            The Superscripts and Subscripts code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2070.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.CurrencySymbols">
            <summary>
            The Currency Symbols code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U20A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.CombiningDiacriticalMarksForSymbols">
            <summary>
            The Combining Diacritical Marks for Symbols code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U20D0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.LetterlikeSymbols">
            <summary>
            The Letterlike Symbols code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2100.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.NumberForms">
            <summary>
            The Number Forms code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2150.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.Arrows">
            <summary>
            The Arrows code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2190.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.MathematicalOperators">
            <summary>
            The Mathematical Operators code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2200.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.MiscellaneousTechnical">
            <summary>
            The Miscellaneous Technical code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2300.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.ControlPictures">
            <summary>
            The Control Pictures code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2400.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.OpticalCharacterRecognition">
            <summary>
            The Optical Character Recognition table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2440.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.EnclosedAlphanumerics">
            <summary>
            The Enclosed Alphanumeric code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2460.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.BoxDrawing">
            <summary>
            The Box Drawing code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2500.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.BlockElements">
            <summary>
            The Block Elements code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2580.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.GeometricShapes">
            <summary>
            The Geometric Shapes code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U25A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.MiscellaneousSymbols">
            <summary>
            The Miscellaneous Symbols code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2600.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.Dingbats">
            <summary>
            The Dingbats code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2700.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.MiscellaneousMathematicalSymbolsA">
            <summary>
            The Miscellaneous Mathematical Symbols-A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U27C0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.SupplementalArrowsA">
            <summary>
            The Supplemental Arrows-A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U27F0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.BraillePatterns">
            <summary>
            The Braille Patterns code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2800.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.SupplementalArrowsB">
            <summary>
            The Supplemental Arrows-B code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2900.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.MiscellaneousMathematicalSymbolsB">
            <summary>
            The Miscellaneous Mathematical Symbols-B code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2980.pdf</remarks>                
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.SupplementalMathematicalOperators">
            <summary>
            The Supplemental Mathematical Operators code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2A00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.MiscellaneousSymbolsAndArrows">
            <summary>
            The Miscellaneous Symbols and Arrows code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2B00.pdf</remarks>        
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.Glagolitic">
            <summary>
            The Glagolitic code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2C00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.LatinExtendedC">
            <summary>
            The Latin Extended-C code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2C60.pdf</remarks>        
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.Coptic">
            <summary>
            The Coptic code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2C80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.GeorgianSupplement">
            <summary>
            The Georgian Supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2D00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.Tifinagh">
            <summary>
            The Tifinagh code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2D30.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.MidCodeCharts.EthiopicExtended">
            <summary>
            The Ethiopic Extended code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2D80.pdf</remarks>
        </member>
        <member name="T:Microsoft.Security.Application.UpperMidCodeCharts">
            <summary>
            Values for the upper middle section of the UTF8 Unicode code tables, from U2DE0 to UA8DF
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.None">
            <summary>
            No code charts from the lower region of the Unicode tables are safe-listed.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CyrillicExtendedA">
            <summary>
            The Cyrillic Extended-A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2DE0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.SupplementalPunctuation">
            <summary>
            The Supplemental Punctuation code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2E00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CjkRadicalsSupplement">
            <summary>
            The CJK Radicials Supplement code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2E80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.KangxiRadicals">
            <summary>
            The Kangxi Radicials code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2F00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.IdeographicDescriptionCharacters">
            <summary>
            The Ideographic Description Characters code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U2FF0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CjkSymbolsAndPunctuation">
            <summary>
            The CJK Symbols and Punctuation code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3000.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Hiragana">
            <summary>
            The Hiragana code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3040.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Katakana">
            <summary>
            The Katakana code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U30A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Bopomofo">
            <summary>
            The Bopomofo code table.
            <seealso cref="F:Microsoft.Security.Application.UpperMidCodeCharts.BopomofoExtended"/>
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3100.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.HangulCompatibilityJamo">
            <summary>
            The Hangul Compatbility Jamo code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3130.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Kanbun">
            <summary>
            The Kanbun code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3190.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.BopomofoExtended">
            <summary>
            The Bopomofu Extended code table.
            <seealso cref="F:Microsoft.Security.Application.UpperMidCodeCharts.Bopomofo"/>
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U31A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CjkStrokes">
            <summary>
            The CJK Strokes code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U31C0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.KatakanaPhoneticExtensions">
            <summary>
            The Katakana Phonetic Extensoins code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U31F0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.EnclosedCjkLettersAndMonths">
            <summary>
            The Enclosed CJK Letters and Months code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3200.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CjkCompatibility">
            <summary>
            The CJK Compatibility code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3300.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CjkUnifiedIdeographsExtensionA">
            <summary>
            The CJK Unified Ideographs Extension A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U3400.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.YijingHexagramSymbols">
            <summary>
            The Yijing Hexagram Symbols code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U4DC0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CjkUnifiedIdeographs">
            <summary>
            The CJK Unified Ideographs code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/U4E00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.YiSyllables">
            <summary>
            The Yi Syllables code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA000.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.YiRadicals">
            <summary>
            The Yi Radicals code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA490.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Lisu">
            <summary>
            The Lisu code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA4D0.pdf</remarks>        
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Vai">
            <summary>
            The Vai code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA500.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CyrillicExtendedB">
            <summary>
            The Cyrillic Extended-B code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA640.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Bamum">
            <summary>
            The Bamum code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA6A0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.ModifierToneLetters">
            <summary>
            The Modifier Tone Letters code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA700.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.LatinExtendedD">
            <summary>
            The Latin Extended-D code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA720.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.SylotiNagri">
            <summary>
            The Syloti Nagri code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA800.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.CommonIndicNumberForms">
            <summary>
            The Common Indic Number Forms code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA830.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Phagspa">
            <summary>
            The Phags-pa code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA840.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperMidCodeCharts.Saurashtra">
            <summary>
            The Saurashtra code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA880.pdf</remarks>
        </member>
        <member name="T:Microsoft.Security.Application.UpperCodeCharts">
            <summary>
            Values for the upper section of the UTF8 Unicode code tables, from UA8E0 to UFFFD
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.None">
            <summary>
            No code charts from the upper region of the Unicode tables are safe-listed.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.DevanagariExtended">
            <summary>
            The Devanagari Extended code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA8E0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.KayahLi">
            <summary>
            The Kayah Li code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA900.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.Rejang">
            <summary>
            The Rejang code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA930.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.HangulJamoExtendedA">
            <summary>
            The Hangul Jamo Extended-A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA960.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.Javanese">
            <summary>
            The Javanese code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UA980.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.Cham">
            <summary>
            The Cham code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UAA00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.MyanmarExtendedA">
            <summary>
            The Myanmar Extended-A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UAA60.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.TaiViet">
            <summary>
            The Tai Viet code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UAA80.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.MeeteiMayek">
            <summary>
            The Meetei Mayek code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UABC0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.HangulSyllables">
            <summary>
            The Hangul Syllables code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UAC00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.HangulJamoExtendedB">
            <summary>
            The Hangul Jamo Extended-B code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UD7B0.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.CjkCompatibilityIdeographs">
            <summary>
            The CJK Compatibility Ideographs code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UF900.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.AlphabeticPresentationForms">
            <summary>
            The Alphabetic Presentation Forms code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFB00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.ArabicPresentationFormsA">
            <summary>
            The Arabic Presentation Forms-A code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFB50.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.VariationSelectors">
            <summary>
            The Variation Selectors code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFE00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.VerticalForms">
            <summary>
            The Vertical Forms code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFE10.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.CombiningHalfMarks">
            <summary>
            The Combining Half Marks code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFE20.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.CjkCompatibilityForms">
            <summary>
            The CJK Compatibility Forms code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFE30.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.SmallFormVariants">
            <summary>
            The Small Form Variants code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFE50.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.ArabicPresentationFormsB">
            <summary>
            The Arabic Presentation Forms-B code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFE70.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.HalfWidthAndFullWidthForms">
            <summary>
            The half width and full width Forms code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFF00.pdf</remarks>
        </member>
        <member name="F:Microsoft.Security.Application.UpperCodeCharts.Specials">
            <summary>
            The Specials code table.
            </summary>
            <remarks>http://www.unicode.org/charts/PDF/UFFF0.pdf</remarks>
        </member>
        <member name="T:Microsoft.Security.Application.Encoder">
            <summary>
            Performs encoding of input strings to provide protection against
            Cross-Site Scripting (XSS) attacks and LDAP injection attacks in 
            various contexts.
            </summary>
            <remarks>
            This encoding library uses the Principle of Inclusions, 
            sometimes referred to as "safe-listing" to provide protection 
            against injection attacks.  With safe-listing protection, 
            algorithms look for valid inputs and automatically treat 
            everything outside that set as a potential attack.  This library 
            can be used as a defense in depth approach with other mitigation 
            techniques. It is suitable for applications with high security 
            requirements.
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.Encoder.HtmlEncode(System.String)">
            <summary>
            Encodes input strings for use in HTML.
            </summary>
            <param name="input">String to be encoded.</param>
            <returns>
            Encoded string for use in HTML.
            </returns>
            <remarks>
            All characters not safe listed are encoded to their Unicode decimal value, using &amp;#DECIMAL; notation.
            The default safe characters include:
            <list type="table">
            <item><term>a-z</term><description>Lower case alphabet</description></item>
            <item><term>A-Z</term><description>Upper case alphabet</description></item>
            <item><term>0-9</term><description>Numbers</description></item>
            <item><term>,</term><description>Comma</description></item>
            <item><term>.</term><description>Period</description></item>
            <item><term>-</term><description>Dash</description></item>
            <item><term>_</term><description>Underscore</description></item>
            <item><term>'</term><description>Apostrophe</description></item>
            <item><term> </term><description>Space</description></item>
            </list>
            The safe list may be adjusted using <see cref="M:Microsoft.Security.Application.UnicodeCharacterEncoder.MarkAsSafe(Microsoft.Security.Application.LowerCodeCharts,Microsoft.Security.Application.LowerMidCodeCharts,Microsoft.Security.Application.MidCodeCharts,Microsoft.Security.Application.UpperMidCodeCharts,Microsoft.Security.Application.UpperCodeCharts)"/>.
            <newpara/>
            Example inputs and their related encoded outputs:
            <list type="table">
            <item><term>&lt;script&gt;alert('XSS Attack!');&lt;/script&gt;</term><description>&amp;lt;script&amp;gt;alert('XSS Attack!');&amp;lt;/script&amp;gt;</description></item>
            <item><term>user@contoso.com</term><description>user@contoso.com</description></item>
            <item><term>Anti-Cross Site Scripting Library</term><description>Anti-Cross Site Scripting Library</description></item>
            <item><term>"Anti-Cross Site Scripting Library"</term><description>&amp;quote;Anti-Cross Site Scripting Library&amp;quote;</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.Security.Application.Encoder.HtmlEncode(System.String,System.Boolean)">
            <summary>
            Encodes input strings for use in HTML.
            </summary>
            <param name="input">String to be encoded.</param>
            <param name="useNamedEntities">Value indicating if the HTML 4.0 named entities should be used.</param>
            <returns>
            Encoded string for use in HTML.
            </returns>
            <remarks>
            All characters not safe listed are encoded to their Unicode decimal value, using &amp;#DECIMAL; notation.
            If you choose to use named entities then if a character is an HTML4.0 named entity the named entity will be used.
            The default safe characters include:
            <list type="table">
            <item><term>a-z</term><description>Lower case alphabet</description></item>
            <item><term>A-Z</term><description>Upper case alphabet</description></item>
            <item><term>0-9</term><description>Numbers</description></item>
            <item><term>,</term><description>Comma</description></item>
            <item><term>.</term><description>Period</description></item>
            <item><term>-</term><description>Dash</description></item>
            <item><term>_</term><description>Underscore</description></item>
            <item><term>'</term><description>Apostrophe</description></item>
            <item><term> </term><description>Space</description></item>
            </list>
            The safe list may be adjusted using <see cref="M:Microsoft.Security.Application.UnicodeCharacterEncoder.MarkAsSafe(Microsoft.Security.Application.LowerCodeCharts,Microsoft.Security.Application.LowerMidCodeCharts,Microsoft.Security.Application.MidCodeCharts,Microsoft.Security.Application.UpperMidCodeCharts,Microsoft.Security.Application.UpperCodeCharts)"/>.
            <newpara/>
            Example inputs and their related encoded outputs:
            <list type="table">
            <item><term>&lt;script&gt;alert('XSS Attack!');&lt;/script&gt;</term><description>&amp;lt;script&amp;gt;alert('XSS Attack!');&amp;lt;/script&amp;gt;</description></item>
            <item><term>user@contoso.com</term><description>user@contoso.com</description></item>
            <item><term>Anti-Cross Site Scripting Library</term><description>Anti-Cross Site Scripting Library</description></item>
            <item><term>"Anti-Cross Site Scripting Library"</term><description>&amp;quote;Anti-Cross Site Scripting Library&amp;quote;</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:Microsoft.Security.Application.Utf16StringReader">
            <summary>
            Reads individual scalar values from a UTF-16 input string.
            </summary>
            <remarks>
            For performance reasons, this is a mutable struct. Use caution when capturing instances of this type.
            </remarks>
        </member>
        <member name="F:Microsoft.Security.Application.Utf16StringReader.LeadingSurrogateStart">
            <summary>
            Starting code point for the UTF-16 leading surrogates.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.Utf16StringReader.TrailingSurrogateStart">
            <summary>
            Starting code point for the UTF-16 trailing surrogates.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.Utf16StringReader.UnicodeReplacementCharacterCodePoint">
            <summary>
            The Unicode replacement character U+FFFD.
            </summary>
            <remarks>
            For more info, see http://www.unicode.org/charts/PDF/UFFF0.pdf.
            </remarks>
        </member>
        <member name="F:Microsoft.Security.Application.Utf16StringReader.input">
            <summary>
            The input string we're iterating on.
            </summary>
        </member>
        <member name="F:Microsoft.Security.Application.Utf16StringReader.currentOffset">
            <summary>
            The current offset into 'input'.
            </summary>
        </member>
        <member name="M:Microsoft.Security.Application.Utf16StringReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Security.Application.Utf16StringReader"/> struct with the given UTF-16 input string.
            </summary>
            <param name="input">The input string to decompose into scalar values.</param>
        </member>
        <member name="M:Microsoft.Security.Application.Utf16StringReader.ReadNextScalarValue">
            <summary>
            Reads the next scalar value from the input string.
            </summary>
            <returns>The next scalar value. If the input string contains invalid UTF-16, the
            return value is the Unicode replacement character U+FFFD. If the end of the string
            is reached, returns -1.</returns>
        </member>
        <member name="M:Microsoft.Security.Application.Utf16StringReader.ConvertToUtf32(System.Char,System.Char)">
            <summary>
            Similar to Char.ConvertToUtf32, but slightly faster in tight loops since parameter checks are not done.
            </summary>
            <param name="leadingSurrogate">The UTF-16 leading surrogate character.</param>
            <param name="trailingSurrogate">The UTF-16 trailing surrogate character.</param>
            <returns>The scalar value resulting from combining these two surrogate characters.</returns>
            <remarks>The caller must ensure that the inputs are valid surrogate characters. If not,
            the output of this routine is undefined.</remarks>
        </member>
        <member name="M:Microsoft.Security.Application.Utf16StringReader.IsValidUnicodeScalarValue(System.Int32)">
            <summary>
            Determines whether a given code point is a valid Unicode scalar value.
            </summary>
            <param name="codePoint">The code point whose validity is to be checked.</param>
            <returns>True if the input is a valid Unicode scalar value, false otherwise.</returns>
        </member>
        <member name="T:Owin.OwinExtensions">
            <summary>
            Extension methods for configuring Autofac within the OWIN pipeline.
            </summary>
        </member>
        <member name="M:Owin.OwinExtensions.UseAutofacMiddleware(Owin.IAppBuilder,Autofac.ILifetimeScope)">
            <summary>
            Adds a component to the OWIN pipeline for using Autofac dependency injection with middleware.
            </summary>
            <param name="app">The application builder.</param>
            <param name="container">The Autofac application lifetime scope/container.</param>
            <returns>The application builder.</returns>
        </member>
        <member name="F:Autofac.Integration.Owin.Constants.OwinLifetimeScopeKey">
            <summary>
            The OWIN key for the current lifetime scope.
            </summary>
        </member>
        <member name="T:Autofac.Integration.Owin.OwinContextExtensions">
            <summary>
            Extension methods for using Autofac within an OWIN context.
            </summary>
        </member>
        <member name="M:Autofac.Integration.Owin.OwinContextExtensions.GetAutofacLifetimeScope(Microsoft.Owin.IOwinContext)">
            <summary>
            Gets the current Autofac lifetime scope from the OWIN context.
            </summary>
            <param name="context">The OWIN context.</param>
            <returns>The current lifetime scope.</returns>
        </member>
        <member name="T:Owin.AutofacWebApiAppBuilderExtensions">
            <summary>
            Extension methods for configuring the OWIN pipeline.
            </summary>
        </member>
        <member name="M:Owin.AutofacWebApiAppBuilderExtensions.UseAutofacWebApi(Owin.IAppBuilder,System.Web.Http.HttpConfiguration)">
            <summary>
            Extends the Autofac lifetime scope added from the OWIN pipeline through to the Web API dependency scope.
            </summary>
            <param name="app">The application builder.</param>
            <param name="configuration">The HTTP server configuration.</param>
            <returns>The application builder.</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.LoginPageLink">
            <summary>
            Represents a link on the login page
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.LoginPageLink.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.LoginPageLink.Href">
            <summary>
            Gets or sets the href.
            </summary>
            <value>
            The href.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.EventContext">
            <summary>
            Contextual information included with every event.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.EventContext.ActivityId">
            <summary>
            Gets or sets the per-request activity identifier.
            </summary>
            <value>
            The activity identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.EventContext.TimeStamp">
            <summary>
            Gets or sets the time stamp when the event was raised.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.EventContext.ProcessId">
            <summary>
            Gets or sets the server process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.EventContext.MachineName">
            <summary>
            Gets or sets the name of the server machine.
            </summary>
            <value>
            The name of the machine.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.EventContext.RemoteIpAddress">
            <summary>
            Gets or sets the remote ip address of the current request.
            </summary>
            <value>
            The remote ip address.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.EventContext.SubjectId">
            <summary>
            Gets or sets the subject identifier of the current user (if available).
            </summary>
            <value>
            The subject identifier.
            </value>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventConstants.Ids.AuthenticationEventsStart">
            Authentication related events
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventConstants.Ids.TokenServiceEventsStart">
            Token service related events
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventConstants.Ids.EndpointsEventsStart">
            Endpoints related events
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventConstants.Ids.InformationEventsStart">
            Information events
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventConstants.Ids.InternalErrorEventsStart">
            Error events
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.EventTypes">
            <summary>
            Indicates if the event is a success or fail event.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventTypes.Success">
            <summary>
            Success event
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventTypes.Failure">
            <summary>
            Failure event
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventTypes.Information">
            <summary>
            Information event
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Events.EventTypes.Error">
            <summary>
            Error event
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Events.ExternalLoginDetails">
            <summary>
            Event class for external login events
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.ExternalLoginDetails.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Events.ExternalLoginDetails.ProviderId">
            <summary>
            Gets or sets the provider identifier.
            </summary>
            <value>
            The provider identifier.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Extensions.ICacheExtensions">
            <summary>
            Extension methods for <see cref="T:Thinktecture.IdentityServer.Core.Services.ICache`1"/>
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.ICacheExtensions.GetAsync``1(Thinktecture.IdentityServer.Core.Services.ICache{``0},System.String,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Attempts to get an item from the cache. If the item is not found, the <c>get</c> function is used to 
            obtain the item and populate the cache.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cache">The cache.</param>
            <param name="key">The key.</param>
            <param name="get">The get function.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            cache
            or
            get
            </exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions">
            <summary>
            Extension methods for <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory"/>
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureScopeStoreCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory,Thinktecture.IdentityServer.Core.Configuration.Registration{Thinktecture.IdentityServer.Core.Services.ICache{System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope}}})">
            <summary>
            Configures the provided cache in the dependency injection system as a decorator for the scope store.
            </summary>
            <param name="factory">The factory.</param>
            <param name="cacheRegistration">The cache registration.</param>
            <exception cref="T:System.ArgumentNullException">
            factory
            or
            cacheRegistration
            or
            ScopeStore needs to be configured on the factory
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureScopeStoreCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory,System.TimeSpan)">
            <summary>
            Configures an in-memory, time-based cache for the scope store.
            </summary>
            <param name="factory">The factory.</param>
            <param name="cacheDuration">Duration of the cache.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureScopeStoreCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory)">
            <summary>
            Configures the default cache for the scope store.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureClientStoreCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory,Thinktecture.IdentityServer.Core.Configuration.Registration{Thinktecture.IdentityServer.Core.Services.ICache{Thinktecture.IdentityServer.Core.Models.Client}})">
            <summary>
            Configures the provided cache in the dependency injection system as a decorator for the client store.
            </summary>
            <param name="factory">The factory.</param>
            <param name="cacheRegistration">The cache registration.</param>
            <exception cref="T:System.ArgumentNullException">
            factory
            or
            cacheRegistration
            or
            ClientStore needs to be configured on the factory
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureClientStoreCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory,System.TimeSpan)">
            <summary>
            Configures an in-memory, time-based cache for the client store.
            </summary>
            <param name="factory">The factory.</param>
            <param name="cacheDuration">Duration of the cache.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureClientStoreCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory)">
            <summary>
            Configures the default cache for the client store.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureUserServiceCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory,Thinktecture.IdentityServer.Core.Configuration.Registration{Thinktecture.IdentityServer.Core.Services.ICache{System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}})">
            <summary>
            Configures the provided cache in the dependency injection system as a decorator for the user service.
            </summary>
            <param name="factory">The factory.</param>
            <param name="cacheRegistration">The cache registration.</param>
            <exception cref="T:System.ArgumentNullException">
            factory
            or
            cacheRegistration
            or
            UserService needs to be configured on the factory
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureUserServiceCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory,System.TimeSpan)">
            <summary>
            Configures an in-memory, time-based cache for the user service store.
            </summary>
            <param name="factory">The factory.</param>
            <param name="cacheDuration">Duration of the cache.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureUserServiceCache(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory)">
            <summary>
            Configures the default cache for the user service store.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactoryExtensions.ConfigureDefaultViewService(Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory,Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions)">
            <summary>
            Configures the default view service.
            </summary>
            <param name="factory">The factory.</param>
            <param name="options">The default view service options.</param>
            <exception cref="T:System.ArgumentNullException">
            factory
            or
            options
            </exception>
            <exception cref="T:System.InvalidOperationException">ViewService is already configured</exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Extensions.ILocalizationServiceExtensions">
            <summary>
            Extension methods for <see cref="T:Thinktecture.IdentityServer.Core.Services.ILocalizationService"/>
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.ILocalizationServiceExtensions.GetMessage(Thinktecture.IdentityServer.Core.Services.ILocalizationService,System.String)">
            <summary>
            Gets a localized string for the message category.
            </summary>
            <param name="localization">The localization.</param>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">localization</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.ILocalizationServiceExtensions.GetEvent(Thinktecture.IdentityServer.Core.Services.ILocalizationService,System.String)">
            <summary>
            Gets a localized string for the event category.
            </summary>
            <param name="localization">The localization.</param>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">localization</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.ILocalizationServiceExtensions.GetScopeDisplayName(Thinktecture.IdentityServer.Core.Services.ILocalizationService,System.String)">
            <summary>
            Gets a localized scope display name.
            </summary>
            <param name="localization">The localization.</param>
            <param name="scope">The scope.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">localization</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.ILocalizationServiceExtensions.GetScopeDescription(Thinktecture.IdentityServer.Core.Services.ILocalizationService,System.String)">
            <summary>
            Gets a localized scope description.
            </summary>
            <param name="localization">The localization.</param>
            <param name="scope">The scope.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">localization</exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.ClientPermissionDescription">
            <summary>
            Models the display information for a permission.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermissionDescription.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermissionDescription.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.ClientSecret">
            <summary>
            Models a client secret with identifier and expiration
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.ClientSecret.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.ClientSecret"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.ClientSecret.#ctor(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.ClientSecret"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="expiration">The expiration.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.ClientSecret.#ctor(System.String,System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.ClientSecret"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="description">The description.</param>
            <param name="expiration">The expiration.</param>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientSecret.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientSecret.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientSecret.Expiration">
            <summary>
            Gets or sets the expiration.
            </summary>
            <value>
            The expiration.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientSecret.ClientSecretType">
            <summary>
            Gets or sets the type of the client secret.
            </summary>
            <value>
            The type of the client secret.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin">
            <summary>
            Represents the information needed to issue a login cookie.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin.Subject">
            <summary>
            The subject claim used to uniquely identifier the user.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin.Name">
            <summary>
            The name claim used as the display name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin.Claims">
            <summary>
            Claims that will be maintained in the login.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin.AuthenticationMethod">
            <summary>
            The authentication method. This should be used when 
            local authentication is performed as some other means other than password has been 
            used to authenticate the user (e.g. '2fa' for two-factor, or 'certificate' for client 
            certificates).
            </summary>
            <value>
            The authentication method.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin.IdentityProvider">
            <summary>
            The identity provider. This should used when an external
            identity provider is used and will typically match the <c>AuthenticationType</c> as configured
            on the Katana authentication middleware.
            </summary>
            <value>
            The identity provider.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin.PersistentLogin">
            <summary>
            Gets or sets if the cookie should be persistent.
            </summary>
            <value>
            The persistent login.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin.PersistentLoginExpiration">
            <summary>
            Gets or sets the expiration for the persistent cookie.
            </summary>
            <value>
            The persistent login expiration.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.ITokenMetadata">
            <summary>
            Models the permissions contained within a token.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ITokenMetadata.SubjectId">
            <summary>
            Gets the subject identifier.
            </summary>
            <value>
            The subject identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ITokenMetadata.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ITokenMetadata.Scopes">
            <summary>
            Gets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.Message">
            <summary>
            Base class for data that needs to be written out as cookies.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.Message"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Message.Created">
            <summary>
            Gets or sets the UTC ticks the <see cref="T:Thinktecture.IdentityServer.Core.Models.Message"/> was created.
            </summary>
            <value>
            The created UTC ticks.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Caching.CachingClientStore">
            <summary>
            <see cref="T:Thinktecture.IdentityServer.Core.Services.IClientStore"/> decorator implementation that uses the provided <see cref="T:Thinktecture.IdentityServer.Core.Services.ICache`1"/> for caching clients.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IClientStore">
            <summary>
            Retrieval of client configuration
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IClientStore.FindClientByIdAsync(System.String)">
            <summary>
            Finds a client by id
            </summary>
            <param name="clientId">The client id</param>
            <returns>The client</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingClientStore.#ctor(Thinktecture.IdentityServer.Core.Services.IClientStore,Thinktecture.IdentityServer.Core.Services.ICache{Thinktecture.IdentityServer.Core.Models.Client})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Caching.CachingClientStore"/> class.
            </summary>
            <param name="inner">The inner <see cref="T:Thinktecture.IdentityServer.Core.Services.IClientStore"/>.</param>
            <param name="cache">The cache.</param>
            <exception cref="T:System.ArgumentNullException">
            inner
            or
            cache
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingClientStore.FindClientByIdAsync(System.String)">
            <summary>
            Finds a client by id
            </summary>
            <param name="clientId">The client id</param>
            <returns>
            The client
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService">
            <summary>
            <see cref="T:Thinktecture.IdentityServer.Core.Services.IUserService"/> decorator implementation that uses the provided <see cref="T:Thinktecture.IdentityServer.Core.Services.ICache`1"/> for caching the user profile data.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IUserService">
            <summary>
            This interface allows IdentityServer to connect to your user and profile store.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IUserService.PreAuthenticateAsync(Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This method gets called before the login page is shown. This allows you to determine if the user should be authenticated by some out of band mechanism (e.g. client certificates or trusted headers).
            </summary>
            <param name="message">The signin message.</param>
            <returns>The authentication result or null to continue the flow.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IUserService.AuthenticateLocalAsync(System.String,System.String,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This method gets called for local authentication (whenever the user uses the username and password dialog).
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="message">The signin message.</param>
            <returns>The authentication result. </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IUserService.AuthenticateExternalAsync(Thinktecture.IdentityServer.Core.Models.ExternalIdentity,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This method gets called when the user uses an external identity provider to authenticate.
            The user's identity from the external provider is passed via the `externalUser` parameter which contains the 
            provider identifier, the provider's identifier for the user, and the claims from the provider for the external user.
            </summary>
            <param name="externalUser">The external user.</param>
            <param name="message">The signin message.</param>
            <returns>
            The authentication result.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IUserService.SignOutAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            This method gets called when the user signs out.
            </summary>
            <param name="subject">The subject.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IUserService.GetProfileDataAsync(System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This method is called whenever claims about the user are requested (e.g. during token creation or via the userinfo endpoint)
            </summary>
            <param name="subject">The subject.</param>
            <param name="requestedClaimTypes">The requested claim types. The user service is expected to filter based 
            upon the requested claim types. <c>null</c> is passed if there is no filtering to be performed.</param>
            <returns>Claims for the subject</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IUserService.IsActiveAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            This method gets called whenever identity server needs to determine if the user is valid or active (e.g. if the user's account has been deactivated since they logged in).
            (e.g. during token issuance or validation).
            </summary>
            <param name="subject">The subject.</param>
            <returns><c>true</c> if the user is still allowed to receive tokens; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService.#ctor(Thinktecture.IdentityServer.Core.Services.IUserService,Thinktecture.IdentityServer.Core.Services.ICache{System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService"/> class.
            </summary>
            <param name="inner">The inner <see cref="T:Thinktecture.IdentityServer.Core.Services.IUserService"/>.</param>
            <param name="cache">The cache.</param>
            <exception cref="T:System.ArgumentNullException">
            inner
            or
            cache
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService.PreAuthenticateAsync(Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This method gets called before the login page is shown. This allows you to authenticate the
            user somehow based on data coming from the host (e.g. client certificates or trusted headers)
            </summary>
            <param name="message">The signin message.</param>
            <returns>
            The authentication result or null to continue the flow.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService.AuthenticateLocalAsync(System.String,System.String,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This method gets called for local authentication (whenever the user uses the username and password dialog).
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="message">The signin message.</param>
            <returns>
            The authentication result.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService.AuthenticateExternalAsync(Thinktecture.IdentityServer.Core.Models.ExternalIdentity,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This method gets called when the user uses an external identity provider to authenticate.
            </summary>
            <param name="externalUser">The external user.</param>
            <param name="message">The signin message.</param>
            <returns>
            The authentication result.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService.SignOutAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            This method gets called when the user signs out.
            </summary>
            <param name="subject">The subject.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService.GetProfileDataAsync(System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This method is called whenever claims about the user are requested (e.g. during token creation or via the userinfo endpoint)
            </summary>
            <param name="subject">The subject.</param>
            <param name="requestedClaimTypes">The requested claim types. The user service is expected to filter based
            upon the requested claim types. <c>null</c> is passed if there is no filtering to be performed.</param>
            <returns>
            Claims for the subject
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingUserService.IsActiveAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            This method gets called whenever identity server needs to determine if the user is valid or active
            (e.g. during token issuance or validation).
            </summary>
            <param name="subject">The subject.</param>
            <returns>
              <c>true</c> if the user is still allowed to receive tokens; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Caching.CachingScopeStore">
            <summary>
            <see cref="T:Thinktecture.IdentityServer.Core.Services.IScopeStore"/> decorator implementation that uses the provided <see cref="T:Thinktecture.IdentityServer.Core.Services.ICache`1"/> for caching the scopes.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IScopeStore">
            <summary>
            Scope retrieval
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IScopeStore.FindScopesAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all scopes.
            </summary>
            <returns>List of scopes</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IScopeStore.GetScopesAsync(System.Boolean)">
            <summary>
            Gets all defined scopes.
            </summary>
            <param name="publicOnly">if set to <c>true</c> only public scopes are returned.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingScopeStore.#ctor(Thinktecture.IdentityServer.Core.Services.IScopeStore,Thinktecture.IdentityServer.Core.Services.ICache{System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope}})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Caching.CachingScopeStore"/> class.
            </summary>
            <param name="inner">The inner <see cref="T:Thinktecture.IdentityServer.Core.Services.IScopeStore"/>.</param>
            <param name="cache">The cache.</param>
            <exception cref="T:System.ArgumentNullException">
            inner
            or
            cache
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingScopeStore.FindScopesAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all scopes.
            </summary>
            <param name="scopeNames"></param>
            <returns>
            List of scopes
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Caching.CachingScopeStore.GetScopesAsync(System.Boolean)">
            <summary>
            Gets all defined scopes.
            </summary>
            <param name="publicOnly">if set to <c>true</c> only public scopes are returned.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions">
            <summary>
            Configures the assets for the default view service.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions.Stylesheets">
            <summary>
            Stylesheets to be rendered into the layout.
            </summary>
            <value>
            The stylesheets.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions.Scripts">
            <summary>
            Scripts to be rendered into the layout.
            </summary>
            <value>
            The scripts.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions.ViewLoader">
            <summary>
            Gets or sets the registration for the view loader.
            </summary>
            <value>
            The view loader.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions.CacheViews">
            <summary>
            Gets or sets a value indicating whether HTML will be cached by the default view cache.
            </summary>
            <value>
              <c>true</c> if [cache views]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceRegistration">
            <summary>
            Registration for the default view service.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.Registration`2">
            <summary>
            Strongly typed <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration"/> implementation.
            </summary>
            <typeparam name="T">The <see cref="P:Thinktecture.IdentityServer.Core.Configuration.Registration`1.DependencyType"/>.</typeparam>
            <typeparam name="TImpl">The <see cref="T:System.Type"/>.</typeparam>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.Registration`1">
            <summary>
            Strongly typed <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration"/> implementation.
            </summary>
            <typeparam name="T">The <see cref="P:Thinktecture.IdentityServer.Core.Configuration.Registration`1.DependencyType"/>.</typeparam>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.Registration">
            <summary>
            Models the registration of a dependency within the IdentityServer dependency injection system.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.Registration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration.Mode">
            <summary>
            Gets or sets the instantiation mode of the registration.
            </summary>
            <value>
            The instantiation mode of the registration.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration.DependencyType">
            <summary>
            The type of dependency the registration implements.
            </summary>
            <value>
            The dependency type.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration.Name">
            <summary>
            The optional name used for the registration. If provided, then the dependency 
            must be resolved by both type and name. This is only used for custom registrations.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration.Instance">
            <summary>
            The singleton instance that represents the registration. The same instance will be 
            used each time the dependency is resolved.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration.Type">
            <summary>
            The type that use for the dependency that implements <see cref="P:Thinktecture.IdentityServer.Core.Configuration.Registration.DependencyType"/>. A new instance
            will be created each time is the dependency is resolved. If the type impelments <see cref="T:System.IDisposable"/>
            then <c>Dispose</c> will be called after each request.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration.Factory">
            <summary>
            A factory function to obtain the dependency. The function will be invoked each time the dependency is 
            resolved. If the returned object impelments <see cref="T:System.IDisposable"/>
            then <c>Dispose</c> will be called after each request.
            The <see cref="T:Thinktecture.IdentityServer.Core.Services.IDependencyResolver"/> parameter can be 
            used to resolve other dependencies.
            </summary>
            <value>
            The factory.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration.AdditionalRegistrations">
            <summary>
            Gets or sets the additional registrations. This collection allows for a convenience for custom
            registrations rather than using the IdentityServerServiceFactory registrations.
            </summary>
            <value>
            The additional registrations.
            </value>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.Registration`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration`1"/> class where the <see cref="T:System.Type"/>
            is the same as the <see cref="P:Thinktecture.IdentityServer.Core.Configuration.Registration`1.DependencyType"/>.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.Registration`1.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration`1"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">type</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.Registration`1.#ctor(System.Func{Thinktecture.IdentityServer.Core.Services.IDependencyResolver,`0},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration`1"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">factory</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.Registration`1.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration`1"/> class.
            </summary>
            <param name="singleton">The singleton instance.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">instance</exception>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.Registration`1.DependencyType">
            <summary>
            The type of dependency the registration implements.
            </summary>
            <value>
            The dependency type.
            </value>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.Registration`2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.Registration`2"/> class.
            </summary>
            <param name="name">Dependency name.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceRegistration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceRegistration"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceRegistration.#ctor(Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceRegistration"/> class.
            </summary>
            <param name="options">The options.</param>
            <exception cref="T:System.ArgumentNullException">options</exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1">
            <summary>
            In-memory, time based implementation of <see cref="T:Thinktecture.IdentityServer.Core.Services.ICache`1"/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ICache`1">
            <summary>
            Abstract interface to model data caching
            </summary>
            <typeparam name="T">The data type to be cached</typeparam>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICache`1.GetAsync(System.String)">
            <summary>
            Gets the cached data based upon a key index.
            </summary>
            <param name="key">The key.</param>
            <returns>The cached item, or <c>null</c> if no item matches the key.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICache`1.SetAsync(System.String,`0)">
            <summary>
            Caches the data based upon a key
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1"/> class.
            </summary>
            <param name="duration">The duration to cache items.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">duration;Duration must be greater than zero</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1.GetAsync(System.String)">
            <summary>
            Gets the cached data based upon a key index.
            </summary>
            <param name="key">The key.</param>
            <returns>
            The cached item, or <c>null</c> if no item matches the key.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1.SetAsync(System.String,`0)">
            <summary>
            Caches the data based upon a key
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.Default.DefaultCache`1.UtcNow">
            <summary>
            Gets the UTC now.
            </summary>
            <value>
            The UTC now.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IDependencyResolver">
            <summary>
            Allows resolving dependencies from the dependency injection system.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IDependencyResolver.Resolve``1(System.String)">
            <summary>
            Resolves the dependency based upon the type. If name is provided then the dependency is also resolved by name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <returns>The dependency.</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCorsPolicyService">
            <summary>
            Default CORS policy service.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ICorsPolicyService">
            <summary>
            Service that determines if CORS is allowed.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICorsPolicyService.IsOriginAllowedAsync(System.String)">
            <summary>
            Determines whether origin is allowed.
            </summary>
            <param name="origin">The origin.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCorsPolicyService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCorsPolicyService"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCorsPolicyService.IsOriginAllowedAsync(System.String)">
            <summary>
            Determines whether the origin allowed.
            </summary>
            <param name="origin">The origin.</param>
            <returns></returns>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.Default.DefaultCorsPolicyService.AllowedOrigins">
            <summary>
            The list allowed origins that are allowed.
            </summary>
            <value>
            The allowed origins.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.Default.DefaultCorsPolicyService.AllowAll">
            <summary>
            Gets or sets a value indicating whether all origins are allowed.
            </summary>
            <value>
              <c>true</c> if allow all; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.PlainTextClientSecretValidator">
            <summary>
            Client secret validator for plain text secrets
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IClientSecretValidator">
            <summary>
            Abstraction for client secret validation
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IClientSecretValidator.ValidateClientSecretAsync(Thinktecture.IdentityServer.Core.Models.Client,System.String)">
            <summary>
            Validates the client secret.
            </summary>
            <param name="client">The client.</param>
            <param name="secret">The secret.</param>
            <returns><c>true</c> if the secret is valid; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.PlainTextClientSecretValidator.ValidateClientSecretAsync(Thinktecture.IdentityServer.Core.Models.Client,System.String)">
            <summary>
            Validates the client secret
            </summary>
            <param name="client">The client.</param>
            <param name="secret">The client secret.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.HashedClientSecretValidator">
            <summary>
            Default client secret validator.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.HashedClientSecretValidator.ValidateClientSecretAsync(Thinktecture.IdentityServer.Core.Models.Client,System.String)">
            <summary>
            Validates the client secret
            </summary>
            <param name="client">The client.</param>
            <param name="secret">The client secret.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IEventService">
            <summary>
            Models a recipient of notification of events
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IEventService.Raise``1(Thinktecture.IdentityServer.Core.Events.Event{``0})">
            <summary>
            Raises the specified event.
            </summary>
            <param name="evt">The event.</param>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultLocalizationService">
            <summary>
            Default localization services. Uses embedded resource files for strings.
            The category is used to identify which resource file from which to read.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ILocalizationService">
            <summary>
            Models loading localizable strings.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ILocalizationService.GetString(System.String,System.String)">
            <summary>
            Gets a localized string based upon the string's category and identifier.
            </summary>
            <param name="category">The category.</param>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultLocalizationService.GetString(System.String,System.String)">
            <summary>
            Gets a localized string based upon the string's category and identifier.
            </summary>
            <param name="category">The category.</param>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultRedirectUriValidator">
            <summary>
            Default implementation of redirect URI validator. Validates the URIs against
            the client's configured URIs.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IRedirectUriValidator">
            <summary>
            Models the logic when validating redirect and post logout redirect URIs.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IRedirectUriValidator.IsRedirectUriValidAsync(System.String,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Determines whether a redirect URI is valid for a client.
            </summary>
            <param name="requestedUri">The requested URI.</param>
            <param name="client">The client.</param>
            <returns><c>true</c> is the URI is valid; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IRedirectUriValidator.IsPostLogoutRedirectUriValidAsync(System.String,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Determines whether a post logout URI is valid for a client.
            </summary>
            <param name="requestedUri">The requested URI.</param>
            <param name="client">The client.</param>
            <returns><c>true</c> is the URI is valid; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRedirectUriValidator.StringCollectionContainsString(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Checks if a given URI string is in a collection of strings (using ordinal ignore case comparison)
            </summary>
            <param name="uris">The uris.</param>
            <param name="requestedUri">The requested URI.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRedirectUriValidator.IsRedirectUriValidAsync(System.String,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Determines whether a redirect URI is valid for a client.
            </summary>
            <param name="requestedUri">The requested URI.</param>
            <param name="client">The client.</param>
            <returns>
              <c>true</c> is the URI is valid; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRedirectUriValidator.IsPostLogoutRedirectUriValidAsync(System.String,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Determines whether a post logout URI is valid for a client.
            </summary>
            <param name="requestedUri">The requested URI.</param>
            <param name="client">The client.</param>
            <returns>
              <c>true</c> is the URI is valid; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryCorsPolicyService">
            <summary>
            CORS policy service that configures the allowed origins from a list of clients' redirect URLs.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryCorsPolicyService.#ctor(System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Client})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryCorsPolicyService"/> class.
            </summary>
            <param name="clients">The clients.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryCorsPolicyService.IsOriginAllowedAsync(System.String)">
            <summary>
            Determines whether origin is allowed.
            </summary>
            <param name="origin">The origin.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.OwinEnvironmentService">
            <summary>
            Container for the OWIN environment.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.OwinEnvironmentService.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.OwinEnvironmentService"/> class.
            </summary>
            <param name="environment">The environment.</param>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.OwinEnvironmentService.Environment">
            <summary>
            Gets the OWIN environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Resources.Events">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.ClientPermissionsRevoked">
            <summary>
              Looks up a localized string similar to Client Permissions Revoked.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.CspReport">
            <summary>
              Looks up a localized string similar to Content Security Policy (CSP) Report.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.ExternalLoginError">
            <summary>
              Looks up a localized string similar to External Login Error.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.ExternalLoginFailure">
            <summary>
              Looks up a localized string similar to External Login Failure.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.ExternalLoginSuccess">
            <summary>
              Looks up a localized string similar to External Login Success.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.LocalLoginFailure">
            <summary>
              Looks up a localized string similar to Local Login Failure.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.LocalLoginSuccess">
            <summary>
              Looks up a localized string similar to Local Login Success.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.LogoutEvent">
            <summary>
              Looks up a localized string similar to Logout Event.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.PartialLogin">
            <summary>
              Looks up a localized string similar to Partial Login.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.PartialLoginComplete">
            <summary>
              Looks up a localized string similar to Partial Login Complete.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.PreLoginFailure">
            <summary>
              Looks up a localized string similar to Pre-Login Failure.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.PreLoginSuccess">
            <summary>
              Looks up a localized string similar to Pre-Login Success.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.ResourceOwnerFlowLoginFailure">
            <summary>
              Looks up a localized string similar to Resource Owner Password Flow Login Failure.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Events.ResourceOwnerFlowLoginSuccess">
            <summary>
              Looks up a localized string similar to Resource Owner Password Flow Login Success.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.SignOutMessage">
            <summary>
            Models the request from a client to sign the user out.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignOutMessage.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignOutMessage.ReturnUrl">
            <summary>
            Gets or sets the URL for the user to return to after they have signed out.
            </summary>
            <value>
            The return URL.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.CspOptions">
            <summary>
            Configures Content Security Policy (CSP) for HTML pages rendered by IdentityServer.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.CspOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.CspOptions"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CspOptions.Enabled">
            <summary>
            Gets or sets a value indicating whether CSP is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CspOptions.ScriptSrc">
            <summary>
            Allows additional script sources to be indicated.
            </summary>
            <value>
            The script source.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CspOptions.StyleSrc">
            <summary>
            Allows additional style sources to be indicated.
            </summary>
            <value>
            The style source.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CspOptions.FontSrc">
            <summary>
            Allows additional font sources to be indicated.
            </summary>
            <value>
            The font source.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CspOptions.ConnectSrc">
            <summary>
            Allows additional connect sources to be indicated.
            </summary>
            <value>
            The connect source.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.IdentityTokenValidationController">
            <summary>
            Endpoint for validating identity tokens
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.IdentityTokenValidationController.Get">
            <summary>
            GET
            </summary>
            <returns>Claims if token is valid</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultEventService">
            <summary>
            Default implementation of the event service. Write events raised to the log.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultEventService.Logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultEventService.Raise``1(Thinktecture.IdentityServer.Core.Events.Event{``0})">
            <summary>
            Raises the specified event.
            </summary>
            <param name="evt">The event.</param>
            <exception cref="T:System.ArgumentNullException">evt</exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.IgnoreClaimsFilter">
            <summary>
            Implementation of claims filter that filters out the claim types indicated.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IExternalClaimsFilter">
            <summary>
            Models a mechanism for claims transformation for claims provided from external identity providers.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IExternalClaimsFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Filters the specified claims from an external identity provider.
            </summary>
            <param name="provider">The identifier for the external identity provider.</param>
            <param name="claims">The incoming claims.</param>
            <returns>The transformed claims.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.IgnoreClaimsFilter.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.IgnoreClaimsFilter"/> class.
            </summary>
            <param name="claimTypesToIgnore">The claim types to ignore.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.IgnoreClaimsFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Filters the specified claims from an external identity provider.
            </summary>
            <param name="provider">The identifier for the external identity provider.</param>
            <param name="claims">The incoming claims.</param>
            <returns>
            The transformed claims.
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.ClaimsFilterBase">
            <summary>
            Base external claims filter implementation. Will only execute for the configured provider and 
            provides a single virtual method to override to transform claims. 
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.ClaimsFilterBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.ClaimsFilterBase"/> class.
            </summary>
            <param name="provider">The provider this claims filter will operate against.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.ClaimsFilterBase.Filter(System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Filters the specified claims from an external identity provider.
            </summary>
            <param name="provider">The identifier for the external identity provider.</param>
            <param name="claims">The incoming claims.</param>
            <returns>
            The transformed claims.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.ClaimsFilterBase.TransformClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Transforms the claims if this provider is used.
            </summary>
            <param name="claims">The claims.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.NormalizingClaimsFilter">
            <summary>
            Claims filter to convert from WIF claim types to OpenID Connect claim types.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.NormalizingClaimsFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Filters the specified claims from an external identity provider.
            </summary>
            <param name="provider">The identifier for the external identity provider.</param>
            <param name="claims">The incoming claims.</param>
            <returns>
            The transformed claims.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.NormalizingClaimsFilter.Filter(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Filters the specified claims.
            </summary>
            <param name="claims">The claims.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.AggregateExternalClaimsFilter">
            <summary>
            Claims filter to aggregate other claims filters.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.AggregateExternalClaimsFilter.#ctor(Thinktecture.IdentityServer.Core.Services.IExternalClaimsFilter[])">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.AggregateExternalClaimsFilter"/> class.
            </summary>
            <param name="filters">The filters to aggregate.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.AggregateExternalClaimsFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Filters the specified claims from an external identity provider.
            </summary>
            <param name="provider">The identifier for the external identity provider.</param>
            <param name="claims">The incoming claims.</param>
            <returns>
            The transformed claims.
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.FacebookClaimsFilter">
            <summary>
            Claims filter for facebook. Converts the "urn:facebook:name" claim to the "name" claim.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FacebookClaimsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.FacebookClaimsFilter"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FacebookClaimsFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.FacebookClaimsFilter"/> class.
            </summary>
            <param name="provider">The provider this claims filter will operate against.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FacebookClaimsFilter.TransformClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Transforms the claims if this provider is used.
            </summary>
            <param name="claims">The claims.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult">
            <summary>
            Models the result of custom grant validation.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult"/> class with an error message.
            </summary>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult"/> class with no error and no user.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult"/> class.
            </summary>
            <param name="subject">The subject claim used to uniquely identifier the user.</param>
            <param name="authenticationMethod">The authentication method which describes the custom grant type.</param>
            <param name="claims">Additional claims that will be maintained in the principal.</param>
            <param name="identityProvider">The identity provider.</param>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult.Principal">
            <summary>
            Gets or sets the principal which represents the result of the authentication.
            </summary>
            <value>
            The principal.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.CustomGrantValidationResult.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.LogSerializer">
            <summary>
            Helper to JSON serialize object data for logging.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.LogSerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified object.
            </summary>
            <param name="logObject">The object.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.ErrorTypes">
            <summary>
            Indicates if a <see cref="T:Thinktecture.IdentityServer.Core.Validation.ValidationResult"/> is an error to be displayed to the user or returned to the client.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Validation.ErrorTypes.Client">
            <summary>
            client error
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Validation.ErrorTypes.User">
            <summary>
            user error
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.RevokeClientPermission">
            <summary>
            Models data submitted to revoke a subject's permissions to a client 
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.RevokeClientPermission.ClientId">
            <summary>
            The client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.ValidatedEndSessionRequest">
            <summary>
            Represents a validated end session (logout) request
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.ValidatedRequest">
            <summary>
            Base class for a validate authorize or token request
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedRequest.Raw">
            <summary>
            Gets or sets the raw request data
            </summary>
            <value>
            The raw.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedRequest.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedRequest.Options">
            <summary>
            Gets or sets the identity server options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedRequest.ValidatedScopes">
            <summary>
            Gets or sets the validated scopes.
            </summary>
            <value>
            The validated scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedEndSessionRequest.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedEndSessionRequest.PostLogOutUri">
            <summary>
            Gets or sets the post-logout URI.
            </summary>
            <value>
            The post-logout URI.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedEndSessionRequest.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.TraceSourceLogProvider">
            <summary>
            Implementation of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILogProvider"/> that uses <see cref="T:Thinktecture.IdentityServer.Core.Logging.TraceSourceLogger"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.TraceSourceLogProvider.GetLogger(System.String)">
            <summary>
            Gets the logger.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.TraceSourceLogger">
            <summary>
            Implementation of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/> that uses <see cref="T:System.Diagnostics.TraceSource"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.TraceSourceLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Logging.TraceSourceLogger"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.TraceSourceLogger.Log(Thinktecture.IdentityServer.Core.Logging.LogLevel,System.Func{System.String},System.Exception)">
            <summary>
            Logs the specified log level.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="messageFunc">The message function.</param>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.StandardScopes">
            <summary>
            Convenience class that defines standard identity scopes.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.All">
            <summary>
            All identity scopes.
            </summary>
            <value>
            All.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.AllAlwaysInclude">
            <summary>
            All identity scopes (always include claims in token).
            </summary>
            <value>
            All always include.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.OpenId">
            <summary>
            Gets the "openid" scope.
            </summary>
            <value>
            The open identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.Profile">
            <summary>
            Gets the "profile" scope.
            </summary>
            <value>
            The profile.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.ProfileAlwaysInclude">
            <summary>
            Gets the "profile" scope (always include claims in token).
            </summary>
            <value>
            The profile always include.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.Email">
            <summary>
            Gets the "email" scope.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.EmailAlwaysInclude">
            <summary>
            Gets the "email" scope (always include claims in token).
            </summary>
            <value>
            The email always include.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.Phone">
            <summary>
            Gets the "phone" scope.
            </summary>
            <value>
            The phone.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.PhoneAlwaysInclude">
            <summary>
            Gets the "phone" scope (always include claims in token).
            </summary>
            <value>
            The phone always include.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.Address">
            <summary>
            Gets the "address" scope.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.AddressAlwaysInclude">
            <summary>
            Gets the "address" scope (always include claims in token).
            </summary>
            <value>
            The address always include.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.AllClaims">
            <summary>
            Gets the "all_claims" scope.
            </summary>
            <value>
            All claims.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.Roles">
            <summary>
            Gets the "roles" scope.
            </summary>
            <value>
            The roles.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.RolesAlwaysInclude">
            <summary>
            Gets the "roles" scope (always include claims in token).
            </summary>
            <value>
            The roles always include.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.StandardScopes.OfflineAccess">
            <summary>
            Gets the "offline_access" scope.
            </summary>
            <value>
            The offline access.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.ClientPermission">
            <summary>
            Models permissions granted to a client.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermission.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermission.ClientName">
            <summary>
            Gets or sets the name of the client.
            </summary>
            <value>
            The name of the client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermission.ClientUrl">
            <summary>
            Gets or sets the client URL.
            </summary>
            <value>
            The client URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermission.ClientLogoUrl">
            <summary>
            Gets or sets the client logo URL.
            </summary>
            <value>
            The client logo URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermission.IdentityPermissions">
            <summary>
            Gets or sets the identity permissions.
            </summary>
            <value>
            The identity permissions.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ClientPermission.ResourcePermissions">
            <summary>
            Gets or sets the resource permissions.
            </summary>
            <value>
            The resource permissions.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest">
            <summary>
            Models the data to create a token from a validated request.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.Scopes">
            <summary>
            Gets or sets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.ValidatedRequest">
            <summary>
            Gets or sets the validated request.
            </summary>
            <value>
            The validated request.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.IncludeAllIdentityClaims">
            <summary>
            Gets or sets a value indicating whether [include all identity claims].
            </summary>
            <value>
            <c>true</c> if [include all identity claims]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.AccessTokenToHash">
            <summary>
            Gets or sets the access token to hash.
            </summary>
            <value>
            The access token to hash.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.AuthorizationCodeToHash">
            <summary>
            Gets or sets the authorization code to hash.
            </summary>
            <value>
            The authorization code to hash.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.TokenCreationRequest.Nonce">
            <summary>
            Gets or sets the nonce.
            </summary>
            <value>
            The nonce.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Resources.Scopes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.address_DisplayName">
            <summary>
              Looks up a localized string similar to Your postal address.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.all_claims_DisplayName">
            <summary>
              Looks up a localized string similar to All user information.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.email_DisplayName">
            <summary>
              Looks up a localized string similar to Your email address.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.offline_access_DisplayName">
            <summary>
              Looks up a localized string similar to Offline access.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.openid_DisplayName">
            <summary>
              Looks up a localized string similar to Your user identifier.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.phone_DisplayName">
            <summary>
              Looks up a localized string similar to Your phone number.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.profile_Description">
            <summary>
              Looks up a localized string similar to Your user profile information (first name, last name, etc.).
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.profile_DisplayName">
            <summary>
              Looks up a localized string similar to User profile.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Scopes.roles_DisplayName">
            <summary>
              Looks up a localized string similar to User roles.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IPermissionsStore">
            <summary>
            Models storage of a subject's permissions for clients. 
            Provides an abstraction on the type of permission (codes, refresh tokens, access tokens, and consent).
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IPermissionsStore.LoadAllAsync(System.String)">
            <summary>
            Loads all permissions the subject has granted to all clients.
            </summary>
            <param name="subject">The subject.</param>
            <returns>The permissions.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IPermissionsStore.RevokeAsync(System.String,System.String)">
            <summary>
            Revokes all permissions the subject has given to a client.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultClientPermissionsService">
            <summary>
            Default client permission service
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IClientPermissionsService">
            <summary>
            Service to allow a subject to query and revoke client permissions.
            Provides an abstraction on the type of permission (codes, refresh tokens, access tokens, and consent).
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IClientPermissionsService.GetClientPermissionsAsync(System.String)">
            <summary>
            Gets the client permissions for a subject.
            </summary>
            <param name="subject">The subject identifier.</param>
            <returns>A list of client permissions</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IClientPermissionsService.RevokeClientPermissionsAsync(System.String,System.String)">
            <summary>
            Revokes the subject's permissions for a client.
            </summary>
            <param name="subject">The subject identifier.</param>
            <param name="clientId">The client identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClientPermissionsService.#ctor(Thinktecture.IdentityServer.Core.Services.IPermissionsStore,Thinktecture.IdentityServer.Core.Services.IClientStore,Thinktecture.IdentityServer.Core.Services.IScopeStore,Thinktecture.IdentityServer.Core.Services.ILocalizationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultClientPermissionsService"/> class.
            </summary>
            <param name="permissionsStore">The permissions store.</param>
            <param name="clientStore">The client store.</param>
            <param name="scopeStore">The scope store.</param>
            <param name="localizationService">The localization service.</param>
            <exception cref="T:System.ArgumentNullException">permissionsStore
            or
            clientStore
            or
            scopeStore</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClientPermissionsService.GetClientPermissionsAsync(System.String)">
            <summary>
            Gets the client permissions asynchronous.
            </summary>
            <param name="subject">The subject identifier.</param>
            <returns>
            A list of client permissions
            </returns>
            <exception cref="T:System.ArgumentNullException">subject</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClientPermissionsService.RevokeClientPermissionsAsync(System.String,System.String)">
            <summary>
            Revokes the client permissions asynchronous.
            </summary>
            <param name="subject">The subject identifier.</param>
            <param name="clientId">The client identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            subject
            or
            clientId
            </exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ITransientDataRepository`1">
            <summary>
            Abstraction for storing transient data (e.g. authorization codes, refresh and reference tokens)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITransientDataRepository`1.StoreAsync(System.String,`0)">
            <summary>
            Stores the data.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITransientDataRepository`1.GetAsync(System.String)">
            <summary>
            Retrieves the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITransientDataRepository`1.RemoveAsync(System.String)">
            <summary>
            Removes the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITransientDataRepository`1.GetAllAsync(System.String)">
            <summary>
            Retrieves all data for a subject identifier.
            </summary>
            <param name="subject">The subject identifier.</param>
            <returns>A list of token metadata</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITransientDataRepository`1.RevokeAsync(System.String,System.String)">
            <summary>
            Revokes all data for a client and subject id combination.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IRefreshTokenStore">
            <summary>
            Refresh token storage
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IAuthorizationCodeStore">
            <summary>
            Abstraction for storing authorization codes
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ITokenHandleStore">
            <summary>
            Token handle storage
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IConsentStore">
            <summary>
            Models persisting user consent
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IConsentStore.LoadAsync(System.String,System.String)">
            <summary>
            Loads the subject's prior consent for the client.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns>The persisted consent.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IConsentStore.UpdateAsync(Thinktecture.IdentityServer.Core.Models.Consent)">
            <summary>
            Persists the subject's consent.
            </summary>
            <param name="consent">The consent.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryConsentStore">
            <summary>
            In-memory consent store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryConsentStore.LoadAllAsync(System.String)">
            <summary>
            Loads all permissions the subject has granted to all clients.
            </summary>
            <param name="subject">The subject.</param>
            <returns>The permissions.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryConsentStore.LoadAsync(System.String,System.String)">
            <summary>
            Loads the subject's prior consent for the client.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns>The persisted consent.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryConsentStore.UpdateAsync(Thinktecture.IdentityServer.Core.Models.Consent)">
            <summary>
            Persists the subject's consent.
            </summary>
            <param name="consent">The consent.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryConsentStore.RevokeAsync(System.String,System.String)">
            <summary>
            Revokes all permissions the subject has given to a client.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.AuthenticateResult">
            <summary>
            AuthenticateResult models the result from the various authentication methods 
            on the <see cref="T:Thinktecture.IdentityServer.Core.Services.IUserService"/>
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.AuthenticateResult"/> class.
            </summary>
            <param name="errorMessage">The error message.</param>
            <exception cref="T:System.ArgumentNullException">errorMessage</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.AuthenticateResult"/> class. This
            version of the constructor indicates a full login.
            </summary>
            <param name="subject">The subject claim used to uniquely identifier the user.</param>
            <param name="name">The name claim used as the display name.</param>
            <param name="claims">Additional claims that will be maintained in the principal.</param>
            <param name="identityProvider">The identity provider. This should used when an external 
            identity provider is used and will typically match the <c>AuthenticationType</c> as configured
            on the Katana authentication middleware.</param>
            <param name="authenticationMethod">The authentication method. This should be used when 
            local authentication is performed as some other means other than password has been 
            used to authenticate the user (e.g. '2fa' for two-factor, or 'certificate' for client 
            certificates).
            </param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.AuthenticateResult"/> class. This
            version of the constructor indicates a partial login (with a redirect) with
            knowledge of the subject claim.
            </summary>
            <param name="redirectPath">The redirect path. This should be relative to the 
            current web server. The <c>"~/"</c> prefix is supported to allow application-relative
            paths to be used (e.g. "~/path").
            </param>
            <param name="subject">The subject claim used to uniquely identifier the user.</param>
            <param name="name">The name claim used as the display name.</param>
            <param name="claims">Additional claims that will be maintained in the principal.</param>
            <param name="identityProvider">The identity provider. This should used when an external 
            identity provider is used and will typically match the <c>AuthenticationType</c> as configured
            on the Katana authentication middleware.</param>
            <param name="authenticationMethod">The authentication method. This should be used when
            local authentication is performed as some other means other than password has been
            used to authenticate the user (e.g. '2fa' for two-factor, or 'certificate' for client</param>
            <exception cref="T:System.ArgumentNullException">redirectPath</exception>
            <exception cref="T:System.ArgumentException">redirectPath must start with / or ~/</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.#ctor(System.String,Thinktecture.IdentityServer.Core.Models.ExternalIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.AuthenticateResult"/> class. This
            version of the constructor indicates a partial login (with a redirect) without
            knowledge of the subject claim.
            </summary>
            <param name="redirectPath">The redirect path. This should be relative to the 
            current web server. The <c>"~/"</c> prefix is supported to allow application-relative
            paths to be used (e.g. "~/path").
            </param>
            <param name="externalId">The external identifier that represents the external identity
            provider the partial login is created from. This will be re-presented to correlate the request
            when the user resumes from the redirect.</param>
            <exception cref="T:System.ArgumentNullException">
            redirectPath
            or
            externalId
            </exception>
            <exception cref="T:System.ArgumentException">redirectPath must start with / or ~/</exception>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.User">
            <summary>
            The user created from the authentication.
            </summary>
            <value>
            The user.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.ErrorMessage">
            <summary>
            The error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.PartialSignInRedirectPath">
            <summary>
            The partial sign in redirect path.
            </summary>
            <value>
            The partial sign in redirect path.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.IsError">
            <summary>
            Gets a value indicating whether the authentication resulted in an error.
            </summary>
            <value>
              <c>true</c> if this instance is error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.IsPartialSignIn">
            <summary>
            Gets a value indicating whether the authentication resulted in a partial sign in.
            </summary>
            <value>
            <c>true</c> if this instance is partial sign in; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthenticateResult.HasSubject">
            <summary>
            Gets a value indicating whether the authentication result has a subject claim.
            </summary>
            <value>
            <c>true</c> if this instance has a subject claim; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.FileSystemViewLoader">
            <summary>
            View loader that loads HTML templates from the file system.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.IViewLoader">
            <summary>
            Models loading the HTML for a view.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.IViewLoader.Load(System.String)">
            <summary>
            Loads the HTML for the named view.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FileSystemViewLoader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.FileSystemViewLoader"/> class.
            </summary>
            <param name="directory">The directory from which to load HTML templates.</param>
            <exception cref="T:System.ArgumentNullException">directory</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FileSystemViewLoader.Load(System.String)">
            <summary>
            Loads the specified page.
            If the file "page.html" exists, then that will be used for the entire template.
            If the file "_layout.html" exists, then that will be used for the layout template.
            If the file "_page.html" exists, then that will be used for the inner template.
            If only one of "_layout.html" or "_page.html" exists, then the embedded assets template is used for the template missing from the file system.
            If none of the above files exist, then <c>null</c> is returned.
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.EmbeddedAssetsViewLoader">
            <summary>
            View loaded that loads HTML templates from the embedded assets.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.EmbeddedAssetsViewLoader.Load(System.String)">
            <summary>
            Loads the HTML for the named view.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.CachingLoader">
            <summary>
            <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.IViewLoader"/> decorator implementation that caches HTML templates in-memory.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.CachingLoader.#ctor(Thinktecture.IdentityServer.Core.Services.Default.ResourceCache,Thinktecture.IdentityServer.Core.Services.Default.IViewLoader)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.CachingLoader"/> class.
            </summary>
            <param name="cache">The cache.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.CachingLoader.Load(System.String)">
            <summary>
            Loads the HTML for the named view.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.FileSystemWithEmbeddedFallbackViewLoader">
            <summary>
            View loader implementation that uses a combination of the file system view loader 
            and the embedded assets view loader. This allows for some templates to be defined 
            via the file system, while using the embedded assets templates for all others.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FileSystemWithEmbeddedFallbackViewLoader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.FileSystemWithEmbeddedFallbackViewLoader"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FileSystemWithEmbeddedFallbackViewLoader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.FileSystemWithEmbeddedFallbackViewLoader"/> class.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.FileSystemWithEmbeddedFallbackViewLoader.Load(System.String)">
            <summary>
            Loads the HTML for the named view.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.ResourceCache">
            <summary>
            In-memory cache used by the view service
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.AntiForgeryTokenViewModel">
            <summary>
            Models values needed for Cross-Site Request Forgery (CSRF) prevention. These
            values must be submitted with any HTML form that is displayed to the user (typically as 
            a hidden input element).
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.AntiForgeryTokenViewModel.Name">
            <summary>
            The name of the form field.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.AntiForgeryTokenViewModel.Value">
            <summary>
            The value of the form field.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel">
            <summary>
            Models the data needed to render the logged out page.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.CommonViewModel">
            <summary>
            Models common data needed to render pages in IdentityServer.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.CommonViewModel.SiteUrl">
            <summary>
            The site URL.
            </summary>
            <value>
            The site URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.CommonViewModel.SiteName">
            <summary>
            Gets or sets the name of the site.
            </summary>
            <value>
            The name of the site.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.CommonViewModel.CurrentUser">
            <summary>
            The current logged in display name.
            </summary>
            <value>
            The current user.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.CommonViewModel.LogoutUrl">
            <summary>
            The URL to allow a user to logout.
            </summary>
            <value>
            The logout URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel.IFrameUrls">
            <summary>
            A list of URLs that must be displayed in hidden iframes in the rendered page. These are
            needed to trigger logout of other endpoints.
            </summary>
            <value>
            The iframe urls.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel.ClientName">
            <summary>
            The name of the client that requested the logout.
            </summary>
            <value>
            The name of the client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel.RedirectUrl">
            <summary>
            The URL to allow the user to return the the <see cref="P:Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel.ClientName"/>.
            </summary>
            <value>
            The redirect URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel.AutoRedirect">
            <summary>
            Gets or sets a value indicating whether automatic redirect to the redirect URL is enabled.
            </summary>
            <value>
              <c>true</c> if automatic redirect is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel.AutoRedirectDelay">
            <summary>
            Gets or sets the automatic redirect delay (in seconds).
            </summary>
            <value>
            The automatic redirect delay.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.LogoutViewModel">
            <summary>
            Models the data needed to render the logout prompt page.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LogoutViewModel.AntiForgery">
            <summary>
            The anti forgery values.
            </summary>
            <value>
            The anti forgery.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.ConsentScopeViewModel">
            <summary>
            Models an individual scope to display on the consent page.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentScopeViewModel.Name">
            <summary>
            The scope name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentScopeViewModel.DisplayName">
            <summary>
            The display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentScopeViewModel.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentScopeViewModel.Emphasize">
            <summary>
            Gets or sets a value indicating whether the scope represents a particularly important resource and 
            should be emphasized as a result.
            </summary>
            <value>
              <c>true</c> if emphasize; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentScopeViewModel.Required">
            <summary>
            Indicates if this scope is required and cannot be deselected.
            </summary>
            <value>
              <c>true</c> if required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentScopeViewModel.Selected">
            <summary>
            Value to populate the selected input value.
            </summary>
            <value>
              <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel">
            <summary>
            Models the data needed to render the consent page.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.ErrorViewModel">
            <summary>
            Models the data needed to render the error page.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ErrorViewModel.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ErrorViewModel.RequestId">
            <summary>
            The per-request identifier. This can be used to display to the end user and can be used in diagnostics.
            </summary>
            <value>
            The request identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.LoginWithDifferentAccountUrl">
            <summary>
            The URL to allow a user to login as a different user.
            </summary>
            <value>
            The login with different account URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.ConsentUrl">
            <summary>
            The URL to POST the user's consent. <see cref="T:Thinktecture.IdentityServer.Core.ViewModels.UserConsent"/> for the model for the submitted data.
            </summary>
            <value>
            The consent URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.AntiForgery">
            <summary>
            The anti forgery values.
            </summary>
            <value>
            The anti forgery.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.ClientName">
            <summary>
            The display name of the client.
            </summary>
            <value>
            The name of the client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.ClientUrl">
            <summary>
            The URL for more information about the client.
            </summary>
            <value>
            The client URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.ClientLogoUrl">
            <summary>
            The URL for the client's logo image.
            </summary>
            <value>
            The client logo URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.AllowRememberConsent">
            <summary>
            Indicates if the "allow remember consent" is disabled and should not be displayed to the user.
            </summary>
            <value>
            <c>true</c> if [allow remember consent]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.RememberConsent">
            <summary>
            Value to populate the "remember my choice" checkbox.
            </summary>
            <value>
              <c>true</c> if [remember consent]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.IdentityScopes">
            <summary>
            List of identity scopes being requested.
            </summary>
            <value>
            The identity scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel.ResourceScopes">
            <summary>
            List of resource scopes being requested.
            </summary>
            <value>
            The resource scopes.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.LoginCredentials">
            <summary>
            Models the inputs to be submitted to the local login endpoint.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginCredentials.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginCredentials.RememberMe">
            <summary>
            Gets or sets the remember me.
            </summary>
            <value>
            The remember me.
            </value>
        </member>
        <member name="T:Owin.UseHstsExtension">
            <summary>
            Configure extensions for HSTS support
            </summary>
        </member>
        <member name="M:Owin.UseHstsExtension.UseHsts(Owin.IAppBuilder,System.TimeSpan)">
            <summary>
            Enables HTTP Strict Transport Security (HSTS) for the hosting application.
            </summary>
            <param name="app">The application.</param>
            <param name="duration">The duration the HSTS header should be cached in the client browser. <c>TimeSpan.Zero</c> will clear the cached value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">app</exception>
            <exception cref="T:System.ArgumentException">duration cannot be below zero</exception>
        </member>
        <member name="M:Owin.UseHstsExtension.UseHsts(Owin.IAppBuilder,System.Int32)">
            <summary>
            Enables HTTP Strict Transport Security (HSTS) for the hosting application.
            </summary>
            <param name="app">The application.</param>
            <param name="days">The number of days the HSTS header should be cached in the client browser. A value of zero will clear the cached value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">days cannot be below zero</exception>
            <exception cref="T:System.ArgumentNullException">app</exception>
        </member>
        <member name="T:Owin.UseIdentityServerExtension">
            <summary>
            Configuration extensions for identity server
            </summary>
        </member>
        <member name="M:Owin.UseIdentityServerExtension.UseIdentityServer(Owin.IAppBuilder,Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions)">
            <summary>
            Extension method to configure IdentityServer in the hosting application.
            </summary>
            <param name="app">The application.</param>
            <param name="options">The <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions"/>.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            app
            or
            options
            </exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions">
            <summary>
            Configures the login and logout views and behavior.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.EnableLocalLogin">
            <summary>
            Gets or sets a value indicating whether local login is enabled.
            Disabling this setting will not display the username/password form on the login page. This also will disable the resource owner password flow.
            Defaults to true.
            </summary>
            <value>
              <c>true</c> if local login is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.EnableLoginHint">
            <summary>
            Gets or sets a value indicating whether the login_hint parameter is used to prepopulate the username field. Defaults to true.
            </summary>
            <value>
              <c>true</c> if login_hint is used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.CookieOptions">
            <summary>
            Gets or sets the cookie options.
            </summary>
            <value>
            The cookie options.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.LoginPageLinks">
            <summary>
            Gets or sets the login page links.
            LoginPageLinks allow the login view to provide the user custom links to other web pages that they might need to visit before they can login (such as a registration page, or a password reset page).
            </summary>
            <value>
            The login page links.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.EnableSignOutPrompt">
            <summary>
            Gets or sets a value indicating whether IdentityServer will show a confirmation page for sign-out.
            When a client initiates a sign-out, by default IdentityServer will ask the user for confirmation. This is a mitigation technique against "logout spam".
            Defaults to true.
            </summary>
            <value>
            <c>true</c> if sign-out prompt is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.EnablePostSignOutAutoRedirect">
            <summary>
            Gets or sets a value indicating whether IdentityServer automatically redirects back to a validated post_logout_redirect_uri passed to the signout endpoint. Defaults to false.
            </summary>
            <value>
            <c>true</c> if automatic redirect after signout is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.PostSignOutAutoRedirectDelay">
            <summary>
            Gets or sets the delay (in seconds) before redirecting to a post_logout_redirect_uri. Defaults to 0.
            </summary>
            <value>
            The post sign out automatic redirect delay.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.RequireAuthenticatedUserForSignOutMessage">
            <summary>
            Indicates if user must be authenticated to accept parameters to end session endpoint. Defaults to false.
            </summary>
            <value>
            <c>true</c> if required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.RememberLastUsername">
            <summary>
            Gets or sets a value indicating whether IdentityServer will remember the last username entered on the login page. Defaults to false.
            </summary>
            <value>
            <c>true</c> if the last username will be remembered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.IdentityProviders">
            <summary>
            Allows configuring additional identity providers
            </summary>
            <value>
            A callback function for configuring identity providers.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.SignInMessageThreshold">
            <summary>
            Gets or sets the limit after which old signin messages are purged.
            Defaults to the value defined in <see cref="F:Thinktecture.IdentityServer.Core.Constants.SignInMessageThreshold"/> value.
            </summary>
            <value>
            The limit after which old signin messages are purged
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.AuthenticationOptions.InvalidSignInRedirectUrl">
            <summary>
            Gets or sets the invalid sign in redirect URL. If the user arrives at the login page without
            a valid sign-in request, then they will be redirected to this URL. The URL must be absolute or
            can relative URLs (starting with "~/").
            </summary>
            <value>
            The invalid sign in redirect URL.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.CookieOptions">
            <summary>
            Configured how cookies are managed by IdentityServer.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.CookieOptions"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.Prefix">
            <summary>
            Allows setting a prefix on cookies to avoid potential conflicts with other cookies with the same names.
            </summary>
            <value>
            The prefix.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.ExpireTimeSpan">
            <summary>
            The expiration duration of the authentication cookie. Defaults to 10 hours.
            </summary>
            <value>
            The expire time span.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.IsPersistent">
            <summary>
            Gets or sets a value indicating whether the authentication cookie is marked as persistent. Defaults to <c>false</c>.
            </summary>
            <value>
            <c>true</c> if persistent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.SlidingExpiration">
            <summary>
            Gets or sets a value indicating if the authentication cookie is sliding, which means it auto renews as the user is active. Defaults to <c>false</c>.
            </summary>
            <value>
              <c>true</c> if sliding; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.Path">
            <summary>
            Gets or sets the cookie path.
            </summary>
            <value>
            The cookie path.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.AllowRememberMe">
            <summary>
            Gets or sets a value indicating whether the "remember me" option is presented to users on the login page. 
            If selected this option will issue a persistent authentication cookie. Defaults to true.
            </summary>
            <value>
              <c>true</c> if allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.RememberMeDuration">
            <summary>
            Gets or sets the duration of the persistent cookie issued by the "remember me" option on the login page.
            Defaults to 30 days.
            </summary>
            <value>
            The duration of the "remember me" persistent cookie.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CookieOptions.SecureMode">
            <summary>
            Gets or sets the mode for issuing the secure flag on the cookies issued. Defaults to SameAsRequest.
            </summary>
            <value>
            The secure.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.CorsPolicy">
            <summary>
            Allows configuration of Cross-Origin Resource Sharing (CORS) within IdentityServer.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.CorsPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.CorsPolicy"/> class.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Configuration.CorsPolicy.AllowAll">
            <summary>
            Preconfigured policy to allow all origins.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CorsPolicy.AllowedOrigins">
            <summary>
            The list allowed origins that are allowed.
            </summary>
            <value>
            The allowed origins.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.CorsPolicy.PolicyCallback">
            <summary>
            A callback that is invoked to determine if an origin is allowed.
            </summary>
            <value>
            The policy callback.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.InMemoryFactory">
            <summary>
            Helper class to create <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.InMemoryFactory.Create(System.Collections.Generic.List{Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser},System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Client},System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope})">
            <summary>
            Convenience method to create an instance of <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory"/> and
            configure it to use in-memory implementations of the <see cref="T:Thinktecture.IdentityServer.Core.Services.IUserService"/>, <see cref="T:Thinktecture.IdentityServer.Core.Services.IClientStore"/>, 
            and <see cref="T:Thinktecture.IdentityServer.Core.Services.IScopeStore"/>.
            </summary>
            <param name="users">The users.</param>
            <param name="clients">The clients.</param>
            <param name="scopes">The scopes.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.RefreshToken">
            <summary>
            Models a refresh token.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.RefreshToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.RefreshToken"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.RefreshToken.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.RefreshToken.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.RefreshToken.LifeTime">
            <summary>
            Gets or sets the life time.
            </summary>
            <value>
            The life time.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.RefreshToken.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.RefreshToken.Version">
            <summary>
            Gets or sets the version number.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.RefreshToken.SubjectId">
            <summary>
            Gets the subject identifier.
            </summary>
            <value>
            The subject identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.RefreshToken.Scopes">
            <summary>
            Gets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.RegistrationMode">
            <summary>
            Indicates in mode in which the DI system instantiates the dependency.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Configuration.RegistrationMode.InstancePerHttpRequest">
            <summary>
            The dependency is instantiated per HTTP request.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Configuration.RegistrationMode.InstancePerUse">
            <summary>
            The dependency is instantiated per use (or per location it is used).
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Configuration.RegistrationMode.Singleton">
            <summary>
            The dependency is instantiated once for the lifetime of the application.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions">
            <summary>
            Extension methods for the OWIN environment.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.GetIdentityServerHost(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the public host name for IdentityServer.
            </summary>
            <param name="env">The env.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.GetIdentityServerBasePath(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the base path of IdentityServer. Can be used inside of Katana <c>Map</c>ped middleware.
            </summary>
            <param name="env">The OWIN environment.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.GetIdentityServerBaseUrl(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the public base URL for IdentityServer.
            </summary>
            <param name="env">The OWIN environment.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.GetIdentityServerLogoutUrl(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the URL for the logout page.
            </summary>
            <param name="env">The OWIN environment.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.GetCurrentUserDisplayName(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the display name of the current user.
            </summary>
            <param name="env">The OWIN environment.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.CreateSignInRequest(System.Collections.Generic.IDictionary{System.String,System.Object},Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            Creates and writes the signin cookie to the response and returns the associated URL to the login page.
            </summary>
            <param name="env">The OWIN environment.</param>
            <param name="message">The signin message.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            env
            or
            message
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.IssueLoginCookie(System.Collections.Generic.IDictionary{System.String,System.Object},Thinktecture.IdentityServer.Core.Models.AuthenticatedLogin)">
            <summary>
            Issues the login cookie for IdentityServer.
            </summary>
            <param name="env">The OWIN environment.</param>
            <param name="login">The login information.</param>
            <exception cref="T:System.ArgumentNullException">
            env
            or
            login
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.GetSignInMessage(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the sign in message.
            </summary>
            <param name="env">The OWIN environment.</param>
            <param name="id">The signin identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            env
            or
            id
            </exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.OwinExtensions.GetRequestId(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the current request identifier.
            </summary>
            <param name="env">The OWIN environment.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel">
            <summary>
            Models that data needed to render the login page.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel.LoginUrl">
            <summary>
            The URL to POST credentials to for local logins. Will be <c>null</c> if local login is disabled.
            <see cref="T:Thinktecture.IdentityServer.Core.ViewModels.LoginCredentials"/> for the model for the submitted data.
            </summary>
            <value>
            The login URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel.AntiForgery">
            <summary>
            The anti forgery values.
            </summary>
            <value>
            The anti forgery.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel.AllowRememberMe">
            <summary>
            Indicates if "remember me" has been disabled and should not be displayed to the user.
            </summary>
            <value>
              <c>true</c> if [allow remember me]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel.RememberMe">
            <summary>
            The value to populate the "remember me" field.
            </summary>
            <value>
              <c>true</c> if [remember me]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel.Username">
            <summary>
            The value to populate the username field.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel.ExternalProviders">
            <summary>
            List of external providers to display for home realm discover (HRD). 
            </summary>
            <value>
            The external providers.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel.AdditionalLinks">
            <summary>
            List of additional links configured to be displayed on the login page (e.g. as registration, or forgot password links).
            </summary>
            <value>
            The additional links.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService">
            <summary>
            Default refresh token service
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IRefreshTokenService">
            <summary>
            Implements refresh token creation and validation
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IRefreshTokenService.CreateRefreshTokenAsync(Thinktecture.IdentityServer.Core.Models.Token,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Creates the refresh token.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="client">The client.</param>
            <returns>The refresh token handle</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IRefreshTokenService.UpdateRefreshTokenAsync(System.String,Thinktecture.IdentityServer.Core.Models.RefreshToken,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Updates the refresh token.
            </summary>
            <param name="handle">The handle.</param>
            <param name="refreshToken">The refresh token.</param>
            <param name="client">The client.</param>
            <returns>The refresh token handle</returns>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService.Logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService._store">
            <summary>
            The refresh token store
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService._events">
            <summary>
            The _events
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService.#ctor(Thinktecture.IdentityServer.Core.Services.IRefreshTokenStore,Thinktecture.IdentityServer.Core.Services.IEventService)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService"/> class.
            </summary>
            <param name="store">The refresh token store.</param>
            <param name="events">The events.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService.CreateRefreshTokenAsync(Thinktecture.IdentityServer.Core.Models.Token,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Creates the refresh token.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="client">The client.</param>
            <returns>
            The refresh token handle
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService.UpdateRefreshTokenAsync(System.String,Thinktecture.IdentityServer.Core.Models.RefreshToken,Thinktecture.IdentityServer.Core.Models.Client)">
            <summary>
            Updates the refresh token.
            </summary>
            <param name="handle">The handle.</param>
            <param name="refreshToken">The refresh token.</param>
            <param name="client">The client.</param>
            <returns>
            The refresh token handle
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService.RaiseRefreshTokenIssuedEvent(System.String,Thinktecture.IdentityServer.Core.Models.RefreshToken)">
            <summary>
            Raises the refresh token issued event.
            </summary>
            <param name="handle">The handle.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultRefreshTokenService.RaiseRefreshTokenRefreshedEvent(System.String,System.String,Thinktecture.IdentityServer.Core.Models.RefreshToken)">
            <summary>
            Raises the refresh token refreshed event.
            </summary>
            <param name="oldHandle">The old handle.</param>
            <param name="newHandle">The new handle.</param>
            <param name="token">The token.</param>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService">
            <summary>
            Default view service.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IViewService">
            <summary>
            Models loading the necessary HTML pages displayed by IdentityServer.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IViewService.Login(Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            Loads the HTML for the login page.
            </summary>
            <param name="model">The model.</param>
            <param name="message">The message.</param>
            <returns>Stream for the HTML</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IViewService.Logout(Thinktecture.IdentityServer.Core.ViewModels.LogoutViewModel)">
            <summary>
            Loads the HTML for the logout prompt page.
            </summary>
            <param name="model">The model.</param>
            <returns>Stream for the HTML</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IViewService.LoggedOut(Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel)">
            <summary>
            Loads the HTML for the logged out page informing the user that they have successfully logged out.
            </summary>
            <param name="model">The model.</param>
            <returns>Stream for the HTML</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IViewService.Consent(Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel)">
            <summary>
            Loads the HTML for the user consent page.
            </summary>
            <param name="model">The model.</param>
            <returns>Stream for the HTML</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IViewService.ClientPermissions(Thinktecture.IdentityServer.Core.ViewModels.ClientPermissionsViewModel)">
            <summary>
            Loads the HTML for the client permissions page.
            </summary>
            <param name="model">The model.</param>
            <returns>Stream for the HTML</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IViewService.Error(Thinktecture.IdentityServer.Core.ViewModels.ErrorViewModel)">
            <summary>
            Loads the HTML for the error page.
            </summary>
            <param name="model">The model.</param>
            <returns>Stream for the HTML</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.#ctor(Thinktecture.IdentityServer.Core.Services.Default.DefaultViewServiceOptions,Thinktecture.IdentityServer.Core.Services.Default.IViewLoader)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.Login(Thinktecture.IdentityServer.Core.ViewModels.LoginViewModel,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            Loads the HTML for the login page.
            </summary>
            <param name="model">The model.</param>
            <param name="message">The message.</param>
            <returns>
            Stream for the HTML
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.Logout(Thinktecture.IdentityServer.Core.ViewModels.LogoutViewModel)">
            <summary>
            Loads the HTML for the logout prompt page.
            </summary>
            <param name="model">The model.</param>
            <returns>
            Stream for the HTML
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.LoggedOut(Thinktecture.IdentityServer.Core.ViewModels.LoggedOutViewModel)">
            <summary>
            Loads the HTML for the logged out page informing the user that they have successfully logged out.
            </summary>
            <param name="model">The model.</param>
            <returns>
            Stream for the HTML
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.Consent(Thinktecture.IdentityServer.Core.ViewModels.ConsentViewModel)">
            <summary>
            Loads the HTML for the user consent page.
            </summary>
            <param name="model">The model.</param>
            <returns>
            Stream for the HTML
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.ClientPermissions(Thinktecture.IdentityServer.Core.ViewModels.ClientPermissionsViewModel)">
            <summary>
            Loads the HTML for the client permissions page.
            </summary>
            <param name="model">The model.</param>
            <returns>
            Stream for the HTML
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.Error(Thinktecture.IdentityServer.Core.ViewModels.ErrorViewModel)">
            <summary>
            Loads the HTML for the error page.
            </summary>
            <param name="model">The model.</param>
            <returns>
            Stream for the HTML
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultViewService.Render(Thinktecture.IdentityServer.Core.ViewModels.CommonViewModel,System.String)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="model">The model.</param>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenSigningService">
            <summary>
            Default token signing service
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ITokenSigningService">
            <summary>
            Logic for signing security tokens
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITokenSigningService.SignTokenAsync(Thinktecture.IdentityServer.Core.Models.Token)">
            <summary>
            Signs the token.
            </summary>
            <param name="token">The token.</param>
            <returns>A protected and serialized security token</returns>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenSigningService._options">
            <summary>
            The identity server options
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenSigningService.#ctor(Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenSigningService"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenSigningService.SignTokenAsync(Thinktecture.IdentityServer.Core.Models.Token)">
            <summary>
            Signs the token.
            </summary>
            <param name="token">The token.</param>
            <returns>
            A protected and serialized security token
            </returns>
            <exception cref="T:System.InvalidOperationException">Invalid token type</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenSigningService.CreateJsonWebToken(Thinktecture.IdentityServer.Core.Models.Token,System.IdentityModel.Tokens.SigningCredentials)">
            <summary>
            Creates the json web token.
            </summary>
            <param name="token">The token.</param>
            <param name="credentials">The credentials.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions">
            <summary>
            The IdentityServerOptions class is the top level container for all configuration settings of IdentityServer.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions"/> class with default values.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.SiteName">
            <summary>
            Gets or sets the display name of the site used in standard views.
            </summary>
            <value>
            Display name of the site used in standard views.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.IssuerUri">
            <summary>
            Gets or sets the unique name of this server instance, e.g. https://myissuer.com
            </summary>
            <value>
            Unique name of this server instance, e.g. https://myissuer.com
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.SigningCertificate">
            <summary>
            Gets or sets the X.509 certificate (and corresponding private key) for signing security tokens.
            </summary>
            <value>
            The signing certificate.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.SecondarySigningCertificate">
            <summary>
            Gets or sets a secondary certificate that will appear in the discovery document. Can be used to prepare clients for certificate rollover
            </summary>
            <value>
            The secondary signing certificate.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.RequireSsl">
            <summary>
            Gets or sets a value indicating whether SSL is required for IdentityServer. Defaults to `true`.
            </summary>
            <value>
              <c>true</c> if SSL is required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.PublicOrigin">
            <summary>
            Gets or sets the public origin for IdentityServer (e.g. "https://yourserver:1234").
            </summary>
            <value>
            The name of the public origin.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.Factory">
            <summary>
            Gets or sets the identity server factory.
            </summary>
            <value>
            The factory.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.DataProtector">
            <summary>
            Gets or sets the data protector.
            </summary>
            <value>
            The data protector.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.Endpoints">
            <summary>
            Gets or sets the endpoint configuration.
            </summary>
            <value>
            The endpoints configuration.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.AuthenticationOptions">
            <summary>
            Gets or sets the authentication options.
            </summary>
            <value>
            The authentication options.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.PluginConfiguration">
            <summary>
            Gets or sets the plugin configuration.
            </summary>
            <value>
            The plugin configuration.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.CorsPolicy">
            <summary>
            Gets or sets the CORS policy.
            </summary>
            <value>
            The CORS policy.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.ProtocolLogoutUrls">
            <summary>
            Gets or sets the protocol logout urls.
            </summary>
            <value>
            The protocol logout urls.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.CspOptions">
            <summary>
            Gets or sets the CSP options.
            </summary>
            <value>
            The CSP options.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.LoggingOptions">
            <summary>
            Gets or sets the diagnostics options.
            </summary>
            <value>
            The diagnostics options.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.EventsOptions">
            <summary>
            Gets or sets the events options.
            </summary>
            <value>
            The events options.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions.EnableWelcomePage">
            <summary>
            Gets or sets a value indicating whether the welcome page is enabled.
            </summary>
            <value>
            <c>true</c> if the welcome page is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory">
            <summary>
            Use this class to replace built-in services, or add additional dependencies to the container
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.#cctor">
            <summary>
            Initializes the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.Register``1(Thinktecture.IdentityServer.Core.Configuration.Registration{``0})">
            <summary>
            Adds a registration to the dependency list
            </summary>
            <typeparam name="T">Type of the dependency</typeparam>
            <param name="registration">The registration.</param>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.Registrations">
            <summary>
            Gets the a list of additional dependencies.
            </summary>
            <value>
            The dependencies.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.UserService">
            <summary>
            Gets or sets the user service. The user service implements user authentication against the local user store as well as association of external users. There are standard implementations for in-memory, MembershipReboot and ASP.NET Identity
            </summary>
            <value>
            The user service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ScopeStore">
            <summary>
            Gets or sets the scope store. The scope store implements retrieval of scopes configuration data.
            </summary>
            <value>
            The scope store.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ClientStore">
            <summary>
            Gets or sets the client store. The client store implements retrieval of client configuration data.
            </summary>
            <value>
            The client store.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.AuthorizationCodeStore">
            <summary>
            Gets or sets the authorization code store - implements storage and retrieval of authorization codes.
            </summary>
            <value>
            The authorization code store.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.TokenHandleStore">
            <summary>
            Gets or sets the token handle store - Implements storage and retrieval of handles for reference tokens.
            </summary>
            <value>
            The token handle store.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ConsentStore">
            <summary>
            Gets or sets the consent store - Implements storage and retrieval of consent decisions.
            </summary>
            <value>
            The consent store.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.RefreshTokenStore">
            <summary>
            Gets or sets the refresh token store - Implements storage and retrieval of refresh tokens.
            </summary>
            <value>
            The refresh token store.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ViewService">
            <summary>
            Gets or sets the view service - Implements retrieval of UI assets. Defaults to using the embedded assets.
            </summary>
            <value>
            The view service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ConsentService">
            <summary>
            Gets or sets the consent service - Implements logic of consent decisions 
            </summary>
            <value>
            The consent service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ClientPermissionsService">
            <summary>
            Gets or sets the client permissions service - Implements retrieval and revocation of consents, reference and refresh tokens.
            </summary>
            <value>
            The client permissions service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.CustomGrantValidator">
            <summary>
            Gets or sets the custom grant validator - Implements validation of custom grant types.
            </summary>
            <value>
            The custom grant validator.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.CustomRequestValidator">
            <summary>
            Gets or sets the custom request validator - Implements custom additional validation of authorize and token requests.
            </summary>
            <value>
            The custom request validator.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ClaimsProvider">
            <summary>
            Gets or sets the claims provider - Implements retrieval of claims for identity and access tokens.
            </summary>
            <value>
            The claims provider.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.TokenService">
            <summary>
            Gets or sets the token service - Implements creation of security tokens definitions.
            </summary>
            <value>
            The token service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.RefreshTokenService">
            <summary>
            Gets or sets the refresh token service - Implements creation and updates of refresh tokens.
            </summary>
            <value>
            The refresh token service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.TokenSigningService">
            <summary>
            Gets or sets the token signing service - Implements creation and signing of security tokens.
            </summary>
            <value>
            The token signing service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ExternalClaimsFilter">
            <summary>
            Gets or sets the external claims filter - Implements filtering and transformation of claims for external identity providers.
            </summary>
            <value>
            The external claims filter.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.EventService">
            <summary>
            Gets or sets the event service.
            </summary>
            <value>
            The event service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.CustomTokenValidator">
            <summary>
            Gets or sets the custom token validator - Implements custom additional validation of tokens for the token validation endpoints.
            </summary>
            <value>
            The custom token validator.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.RedirectUriValidator">
            <summary>
            Gets or sets the redirect URI validator.
            </summary>
            <value>
            The redirect URI validator.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.LocalizationService">
            <summary>
            Gets or sets the localization service.
            </summary>
            <value>
            The localization service.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.ClientSecretValidator">
            <summary>
            Gets or sets the client secret validator.
            </summary>
            <value>
            The client secret validator.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Configuration.IdentityServerServiceFactory.CorsPolicyService">
            <summary>
            Gets or sets the CORS policy service.
            </summary>
            <value>
            The CORS policy service.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.AccessTokenValidationController">
            <summary>
            Endpoint for validating access tokens
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.AccessTokenValidationController.Get">
            <summary>
            GET
            </summary>
            <returns>Claims if token is valid</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.DiscoveryEndpointController">
            <summary>
            OpenID Connect discovery document endpoint
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.DiscoveryEndpointController.GetConfiguration">
            <summary>
            GET
            </summary>
            <returns>Discovery document</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.DiscoveryEndpointController.GetKeyData">
            <summary>
            GET for JWKs
            </summary>
            <returns>JSON Web Key set</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.EndSessionController">
            <summary>
            OpenID Connect end session endpoint
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.EndSessionController.#ctor(Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions,Thinktecture.IdentityServer.Core.Validation.EndSessionRequestValidator,Thinktecture.IdentityServer.Core.ResponseHandling.EndSessionResponseGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Endpoints.EndSessionController"/> class.
            </summary>
            <param name="options">The options.</param>
            <param name="validator">The validator.</param>
            <param name="generator">The generator.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.EndSessionController.Logout">
            <summary>
            GET
            </summary>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.EndSessionController.LogoutCallback">
            <summary>
            Logout callback
            </summary>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.UserInfoEndpointController">
            <summary>
            OpenID Connect userinfo endpoint
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.UserInfoEndpointController.#ctor(Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions,Thinktecture.IdentityServer.Core.Validation.TokenValidator,Thinktecture.IdentityServer.Core.ResponseHandling.UserInfoResponseGenerator,Thinktecture.IdentityServer.Core.Validation.BearerTokenUsageValidator,Thinktecture.IdentityServer.Core.Services.IEventService)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Endpoints.UserInfoEndpointController"/> class.
            </summary>
            <param name="options">The options.</param>
            <param name="tokenValidator">The token validator.</param>
            <param name="generator">The generator.</param>
            <param name="tokenUsageValidator">The token usage validator.</param>
            <param name="events">The event service</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.UserInfoEndpointController.GetUserInfo(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets the user information.
            </summary>
            <param name="request">The request.</param>
            <returns>userinfo response</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.AuthorizationCode">
            <summary>
            Modles an authorization code.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.AuthorizationCode"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.IsOpenId">
            <summary>
            Gets or sets a value indicating whether this code is an OpenID Connect code.
            </summary>
            <value>
            <c>true</c> if this instance is open identifier; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.RequestedScopes">
            <summary>
            Gets or sets the requested scopes.
            </summary>
            <value>
            The requested scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.RedirectUri">
            <summary>
            Gets or sets the redirect URI.
            </summary>
            <value>
            The redirect URI.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.Nonce">
            <summary>
            Gets or sets the nonce.
            </summary>
            <value>
            The nonce.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.WasConsentShown">
            <summary>
            Gets or sets a value indicating whether consent was shown.
            </summary>
            <value>
              <c>true</c> if consent was shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.SubjectId">
            <summary>
            Gets the subject identifier.
            </summary>
            <value>
            The subject identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.AuthorizationCode.Scopes">
            <summary>
            Gets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.UserConsent">
            <summary>
            Models the data submitted from the conset page.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.UserConsent.Button">
            <summary>
            Gets or sets the button that was clicked (either "yes" or "no").
            </summary>
            <value>
            The button.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.UserConsent.Scopes">
            <summary>
            Gets or sets the scopes consented to.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.UserConsent.RememberConsent">
            <summary>
            Gets or sets a value indicating whether the user wishes the consent to be remembered.
            </summary>
            <value>
              <c>true</c> if consent is to be remembered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomGrantValidator">
            <summary>
            Default custom grant validator
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ICustomGrantValidator">
            <summary>
            Handles validation of token requests using custom grant types
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICustomGrantValidator.ValidateAsync(Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest)">
            <summary>
            Validates the custom grant request.
            </summary>
            <param name="request">The validated token request.</param>
            <returns>A principal</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomGrantValidator.ValidateAsync(Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest)">
            <summary>
            Validates the custom grant request.
            </summary>
            <param name="request">The validated token request.</param>
            <returns>
            A principal
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomRequestValidator">
            <summary>
            Default custom request validator
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ICustomRequestValidator">
            <summary>
            Allows inserting custom validation logic into authorize and token requests
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICustomRequestValidator.ValidateAuthorizeRequestAsync(Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest)">
            <summary>
            Custom validation logic for the authorize request.
            </summary>
            <param name="request">The validated request.</param>
            <returns>The validation result</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICustomRequestValidator.ValidateTokenRequestAsync(Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest)">
            <summary>
            Custom validation logic for the token request.
            </summary>
            <param name="request">The validated request.</param>
            <returns>The validation result</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomRequestValidator.ValidateAuthorizeRequestAsync(Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest)">
            <summary>
            Custom validation logic for the authorize request.
            </summary>
            <param name="request">The validated request.</param>
            <returns>
            The validation result
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomRequestValidator.ValidateTokenRequestAsync(Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest)">
            <summary>
            Custom validation logic for the token request.
            </summary>
            <param name="request">The validated request.</param>
            <returns>
            The validation result
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator">
            <summary>
            Default custom token validator
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ICustomTokenValidator">
            <summary>
            Allows inserting custom token validation logic
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICustomTokenValidator.ValidateAccessTokenAsync(Thinktecture.IdentityServer.Core.Validation.TokenValidationResult)">
            <summary>
            Custom validation logic for access tokens.
            </summary>
            <param name="result">The validation result so far.</param>
            <returns>The validation result</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ICustomTokenValidator.ValidateIdentityTokenAsync(Thinktecture.IdentityServer.Core.Validation.TokenValidationResult)">
            <summary>
            Custom validation logic for identity tokens.
            </summary>
            <param name="result">The validation result so far.</param>
            <returns>The validation result</returns>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator.Logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator._users">
            <summary>
            The user service
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator._clients">
            <summary>
            The client store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator.#ctor(Thinktecture.IdentityServer.Core.Services.IUserService,Thinktecture.IdentityServer.Core.Services.IClientStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator"/> class.
            </summary>
            <param name="users">The users store.</param>
            <param name="clients">The client store.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator.ValidateAccessTokenAsync(Thinktecture.IdentityServer.Core.Validation.TokenValidationResult)">
            <summary>
            Custom validation logic for access tokens.
            </summary>
            <param name="result">The validation result so far.</param>
            <returns>
            The validation result
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultCustomTokenValidator.ValidateIdentityTokenAsync(Thinktecture.IdentityServer.Core.Validation.TokenValidationResult)">
            <summary>
            Custom validation logic for identity tokens.
            </summary>
            <param name="result">The validation result so far.</param>
            <returns>
            The validation result
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService">
            <summary>
            Default token service
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.ITokenService">
            <summary>
            Logic for creating security tokens
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITokenService.CreateIdentityTokenAsync(Thinktecture.IdentityServer.Core.Models.TokenCreationRequest)">
            <summary>
            Creates an identity token.
            </summary>
            <param name="request">The token creation request.</param>
            <returns>An identity token</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITokenService.CreateAccessTokenAsync(Thinktecture.IdentityServer.Core.Models.TokenCreationRequest)">
            <summary>
            Creates an access token.
            </summary>
            <param name="request">The token creation request.</param>
            <returns>An access token</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.ITokenService.CreateSecurityTokenAsync(Thinktecture.IdentityServer.Core.Models.Token)">
            <summary>
            Creates a serialized and protected security token.
            </summary>
            <param name="token">The token.</param>
            <returns>A security token in serialized form</returns>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService.Logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService._options">
            <summary>
            The identity server options
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService._claimsProvider">
            <summary>
            The claims provider
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService._tokenHandles">
            <summary>
            The token handles
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService._signingService">
            <summary>
            The signing service
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService._events">
            <summary>
            The events service
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService.#ctor(Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions,Thinktecture.IdentityServer.Core.Services.IClaimsProvider,Thinktecture.IdentityServer.Core.Services.ITokenHandleStore,Thinktecture.IdentityServer.Core.Services.ITokenSigningService,Thinktecture.IdentityServer.Core.Services.IEventService)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService"/> class.
            </summary>
            <param name="options">The options.</param>
            <param name="claimsProvider">The claims provider.</param>
            <param name="tokenHandles">The token handles.</param>
            <param name="signingService">The signing service.</param>
            <param name="events">The events service.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService.CreateIdentityTokenAsync(Thinktecture.IdentityServer.Core.Models.TokenCreationRequest)">
            <summary>
            Creates an identity token.
            </summary>
            <param name="request">The token creation request.</param>
            <returns>
            An identity token
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService.CreateAccessTokenAsync(Thinktecture.IdentityServer.Core.Models.TokenCreationRequest)">
            <summary>
            Creates an access token.
            </summary>
            <param name="request">The token creation request.</param>
            <returns>
            An access token
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService.CreateSecurityTokenAsync(Thinktecture.IdentityServer.Core.Models.Token)">
            <summary>
            Creates a serialized and protected security token.
            </summary>
            <param name="token">The token.</param>
            <returns>
            A security token in serialized form
            </returns>
            <exception cref="T:System.InvalidOperationException">Invalid token type.</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultTokenService.HashAdditionalData(System.String)">
            <summary>
            Hashes an additional data (e.g. for c_hash or at_hash).
            </summary>
            <param name="tokenToHash">The token to hash.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider">
            <summary>
            Default claims provider implementation
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IClaimsProvider">
            <summary>
            The claims provider is responsible for determining which claims to include in tokens
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IClaimsProvider.GetIdentityTokenClaimsAsync(System.Security.Claims.ClaimsPrincipal,Thinktecture.IdentityServer.Core.Models.Client,System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope},System.Boolean,Thinktecture.IdentityServer.Core.Validation.ValidatedRequest)">
            <summary>
            Returns claims for an identity token
            </summary>
            <param name="subject">The subject</param>
            <param name="client">The client</param>
            <param name="scopes">The requested scopes</param>
            <param name="includeAllIdentityClaims">Specifies if all claims should be included in the token, or if the userinfo endpoint can be used to retrieve them</param>
            <param name="request">The raw request</param>
            <returns>Claims for the identity token</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IClaimsProvider.GetAccessTokenClaimsAsync(System.Security.Claims.ClaimsPrincipal,Thinktecture.IdentityServer.Core.Models.Client,System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope},Thinktecture.IdentityServer.Core.Validation.ValidatedRequest)">
            <summary>
            Returns claims for an access token.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <param name="scopes">The requested scopes.</param>
            <param name="request">The raw request.</param>
            <returns>Claims for the access token</returns>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider.Logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider._users">
            <summary>
            The user service
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider.#ctor(Thinktecture.IdentityServer.Core.Services.IUserService)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider"/> class.
            </summary>
            <param name="users">The users service</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider.GetIdentityTokenClaimsAsync(System.Security.Claims.ClaimsPrincipal,Thinktecture.IdentityServer.Core.Models.Client,System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope},System.Boolean,Thinktecture.IdentityServer.Core.Validation.ValidatedRequest)">
            <summary>
            Returns claims for an identity token
            </summary>
            <param name="subject">The subject</param>
            <param name="client">The client</param>
            <param name="scopes">The requested scopes</param>
            <param name="includeAllIdentityClaims">Specifies if all claims should be included in the token, or if the userinfo endpoint can be used to retrieve them</param>
            <param name="request">The raw request</param>
            <returns>
            Claims for the identity token
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider.GetAccessTokenClaimsAsync(System.Security.Claims.ClaimsPrincipal,Thinktecture.IdentityServer.Core.Models.Client,System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope},Thinktecture.IdentityServer.Core.Validation.ValidatedRequest)">
            <summary>
            Returns claims for an identity token.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <param name="scopes">The requested scopes.</param>
            <param name="request">The raw request.</param>
            <returns>
            Claims for the access token
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider.GetStandardSubjectClaims(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Gets the standard subject claims.
            </summary>
            <param name="subject">The subject.</param>
            <returns>A list of standard claims</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider.GetOptionalClaims(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Gets additional (and optional) claims from the cookie or incoming subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns>Additional claims</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultClaimsProvider.FilterProtocolClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Filters out protocol claims like amr, nonce etc..
            </summary>
            <param name="claims">The claims.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult">
            <summary>
            Modles the validation result of access tokens and id tokens.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult.Claims">
            <summary>
            Gets or sets the claims.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult.Jwt">
            <summary>
            Gets or sets the JWT.
            </summary>
            <value>
            The JWT.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult.ReferenceToken">
            <summary>
            Gets or sets the reference token.
            </summary>
            <value>
            The reference token.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult.ReferenceTokenId">
            <summary>
            Gets or sets the reference token identifier.
            </summary>
            <value>
            The reference token identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.TokenValidationResult.IsError">
            <summary>
            Gets or sets a value indicating whether this instance is error.
            </summary>
            <value>
              <c>true</c> if this instance is error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.ValidatedUserInfoRequest">
            <summary>
            Represents a validated request to the user info endpoint
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedUserInfoRequest.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Extensions.IDataProtectorExtensions">
            <summary>
            Extension methods for <see cref="T:Thinktecture.IdentityServer.Core.Configuration.IDataProtector"/>
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.IDataProtectorExtensions.Protect(Thinktecture.IdentityServer.Core.Configuration.IDataProtector,System.String,System.String)">
            <summary>
            Protects the specified data and Base64 Url encodes the response.
            </summary>
            <param name="protector">The protector.</param>
            <param name="data">The data.</param>
            <param name="entropy">The entropy.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.IDataProtectorExtensions.Unprotect(Thinktecture.IdentityServer.Core.Configuration.IDataProtector,System.String,System.String)">
            <summary>
            Base64 Url decodes the input and unprotects the data.
            </summary>
            <param name="protector">The protector.</param>
            <param name="data">The data.</param>
            <param name="entropy">The entropy.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogProvider">
            <summary>
            Implementation of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILogProvider"/> that uses the <see cref="T:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogger"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogProvider.GetLogger(System.String)">
            <summary>
            Gets the logger.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogger">
            <summary>
            Implementation of <see cref="T:Thinktecture.IdentityServer.Core.Logging.ILog"/> that uses <see cref="T:System.Diagnostics.Trace"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogger"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogger.Log(Thinktecture.IdentityServer.Core.Logging.LogLevel,System.Func{System.String},System.Exception)">
            <summary>
            Logs the specified log level.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="messageFunc">The message function.</param>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Logging.DiagnosticsTraceLogger.Log``1(Thinktecture.IdentityServer.Core.Logging.LogLevel,System.Func{System.String},``0)">
            <summary>
            Log a message and exception at the specified log level.
            </summary>
            <typeparam name="TException">The type of the exception.</typeparam>
            <param name="logLevel">The log level.</param>
            <param name="messageFunc">The message function.</param>
            <param name="exception">The exception.</param>
            <remarks>
            Note to implementors: the message func should not be called if the loglevel is not enabled
            so as not to incur perfomance penalties.
            </remarks>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.Consent">
            <summary>
            Represents the permissions (in terms of scopes) granted to a client by a subject
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Consent.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Consent.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Consent.Scopes">
            <summary>
            Gets or sets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.ScopeType">
            <summary>
            OpenID Connect scope types.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.ScopeType.Identity">
            <summary>
            Scope representing identity data (e.g. profile or email)
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.ScopeType.Resource">
            <summary>
            Scope representing a resource (e.g. a web api)
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.Flows">
            <summary>
            OpenID Connect flows.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.Flows.AuthorizationCode">
            <summary>
            authorization code flow
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.Flows.Implicit">
            <summary>
            implicit flow
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.Flows.Hybrid">
            <summary>
            hybrid flow
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.Flows.ClientCredentials">
            <summary>
            client credentials flow
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.Flows.ResourceOwner">
            <summary>
            resource owner password credential flow
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.Flows.Custom">
            <summary>
            custom grant
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.SubjectTypes">
            <summary>
            OpenID Connect subject types.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.SubjectTypes.Global">
            <summary>
            global - use the native subject id
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.SubjectTypes.Ppid">
            <summary>
            ppid - scope the subject id to the client
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.AccessTokenType">
            <summary>
            Access token types.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.AccessTokenType.Jwt">
            <summary>
            Self-contained Json Web Token
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.AccessTokenType.Reference">
            <summary>
            Reference token
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.TokenUsage">
            <summary>
            Token usage types.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.TokenUsage.ReUse">
            <summary>
            Re-use the refresh token handle
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.TokenUsage.OneTimeOnly">
            <summary>
            Issue a new refresh token handle every time
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.TokenExpiration">
            <summary>
            Token expiration types.
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.TokenExpiration.Sliding">
            <summary>
            Sliding token expiration
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Models.TokenExpiration.Absolute">
            <summary>
            Absolute token expiration
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.ExternalIdentity">
            <summary>
            Models the identity of a user authenticating from an external identity provider.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.ExternalIdentity.FromClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Creates an ExternalIdentity and determines the Provider and ProviderId from the list of claims.
            </summary>
            <param name="claims">The claims.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">claims</exception>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ExternalIdentity.Provider">
            <summary>
            Identifier of the external identity provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ExternalIdentity.ProviderId">
            <summary>
            User's unique identifier provided by the external identity provider.
            </summary>
            <value>
            The provider identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ExternalIdentity.Claims">
            <summary>
            Claims supplied for the user from the external identity provider.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions">
            <summary>
            Extension methods for <see cref="T:System.Security.Principal.IPrincipal"/> and <see cref="T:System.Security.Principal.IIdentity"/> .
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetAuthenticationTime(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the authentication time.
            </summary>
            <param name="principal">The principal.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetAuthenticationTimeEpoch(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the authentication epoch time.
            </summary>
            <param name="principal">The principal.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetAuthenticationTimeEpoch(System.Security.Principal.IIdentity)">
            <summary>
            Gets the authentication epoch time.
            </summary>
            <param name="identity">The identity.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetSubjectId(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the subject identifier.
            </summary>
            <param name="principal">The principal.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetSubjectId(System.Security.Principal.IIdentity)">
            <summary>
            Gets the subject identifier.
            </summary>
            <param name="identity">The identity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">sub claim is missing</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetName(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the name.
            </summary>
            <param name="principal">The principal.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetName(System.Security.Principal.IIdentity)">
            <summary>
            Gets the name.
            </summary>
            <param name="identity">The identity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">name claim is missing</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetAuthenticationMethod(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the authentication method.
            </summary>
            <param name="principal">The principal.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetAuthenticationMethod(System.Security.Principal.IIdentity)">
            <summary>
            Gets the authentication method.
            </summary>
            <param name="identity">The identity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">amr claim is missing</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetIdentityProvider(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the identity provider.
            </summary>
            <param name="principal">The principal.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Extensions.PrincipalExtensions.GetIdentityProvider(System.Security.Principal.IIdentity)">
            <summary>
            Gets the identity provider.
            </summary>
            <param name="identity">The identity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">idp claim is missing</exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.Client">
            <summary>
            Models an OpenID Connect or OAuth2 client
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.Client.#ctor">
            <summary>
            Creates a Client with default values
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.Enabled">
            <summary>
            Specifies if client is enabled (defaults to true)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.ClientId">
            <summary>
            Unique ID of the client
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.ClientSecrets">
            <summary>
            Client secrets - only relevant for flows that require a secret
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.ClientName">
            <summary>
            Client display name (used for logging and consent screen)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.ClientUri">
            <summary>
            URI to further information about client (used on consent screen)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.LogoUri">
            <summary>
            URI to client logo (used on consent screen)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.RequireConsent">
            <summary>
            Specifies whether a consent screen is required (defaults to true)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AllowRememberConsent">
            <summary>
            Specifies whether user can choose to store consent decisions (defaults to true)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.Flow">
            <summary>
            Specifies allowed flow for client (either AuthorizationCode, Implicit, Hybrid, ResourceOwner, ClientCredentials or Custom). Defaults to Implicit.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AllowClientCredentialsOnly">
            <summary>
            Gets or sets a value indicating whether this client is allowed to request token using client credentials only.
            This is e.g. useful when you want a client to be able to use both a user-centric flow like implicit and additionally client credentials flow
            </summary>
            <value>
            <c>true</c> if client credentials flow is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.RedirectUris">
            <summary>
            Specifies allowed URIs to return tokens or authorization codes to
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.PostLogoutRedirectUris">
            <summary>
            Specifies allowed URIs to redirect to after logout
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.ScopeRestrictions">
            <summary>
            Specifies the scopes that the client is allowed to request. If empty, the client can request all scopes (defaults to empty)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.IdentityTokenLifetime">
            <summary>
            Lifetime of identity token in seconds (defaults to 300 seconds / 5 minutes)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AccessTokenLifetime">
            <summary>
            Lifetime of access token in seconds (defaults to 3600 seconds / 1 hour)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AuthorizationCodeLifetime">
            <summary>
            Lifetime of authorization code in seconds (defaults to 300 seconds / 5 minutes)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AbsoluteRefreshTokenLifetime">
            <summary>
            Maximum lifetime of a refresh token in seconds. Defaults to 2592000 seconds / 30 days
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.SlidingRefreshTokenLifetime">
            <summary>
            Sliding lifetime of a refresh token in seconds. Defaults to 1296000 seconds / 15 days
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.RefreshTokenUsage">
            /// <summary>
            ReUse: the refresh token handle will stay the same when refreshing tokens
            OneTime: the refresh token handle will be updated when refreshing tokens
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.UpdateAccessTokenClaimsOnRefresh">
            <summary>
            Gets or sets a value indicating whether the access token (and its claims) should be updated on a refresh token request.
            </summary>
            <value>
            <c>true</c> if the token should be updated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.RefreshTokenExpiration">
            <summary>
            Absolute: the refresh token will expire on a fixed point in time (specified by the AbsoluteRefreshTokenLifetime)
            Sliding: when refreshing the token, the lifetime of the refresh token will be renewed (by the amount specified in SlidingRefreshTokenLifetime). The lifetime will not exceed 
            </summary>        
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AccessTokenType">
            <summary>
            Specifies whether the access token is a reference token or a self contained JWT token (defaults to Jwt).
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.EnableLocalLogin">
            <summary>
            Gets or sets a value indicating whether the local login is allowed for this client. Defaults to <c>true</c>.
            </summary>
            <value>
              <c>true</c> if local logins are enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.IdentityProviderRestrictions">
            <summary>
            Specifies which external IdPs can be used with this client (if list is empty all IdPs are allowed). Defaults to empty.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.IncludeJwtId">
            <summary>
            Gets or sets a value indicating whether JWT access tokens should include an identifier
            </summary>
            <value>
            <c>true</c> to add an id; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.Claims">
            <summary>
            Allows settings claims for the client (will be included in the access token).
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AlwaysSendClientClaims">
            <summary>
            Gets or sets a value indicating whether client claims should be always included in the access tokens - or only for client credentials flow.
            </summary>
            <value>
            <c>true</c> if claims should always be sent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.PrefixClientClaims">
            <summary>
            Gets or sets a value indicating whether all client claims should be prefixed.
            </summary>
            <value>
              <c>true</c> if client claims should be prefixed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.CustomGrantTypeRestrictions">
            <summary>
            Gets or sets a list of allowed custom grant types when Flow is set to Custom. If the list is empty, all custom grant types are allowed.
            </summary>
            <value>
            The custom grant restrictions.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Client.AllowedCorsOrigins">
            <summary>
            Gets or sets the allowed CORS origins for JavaScript clients.
            </summary>
            <value>
            The allowed CORS origins.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.AuthorizeEndpointController">
            <summary>
            OAuth2/OpenID Connect authorize endpoint
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.AuthorizeEndpointController.#ctor(Thinktecture.IdentityServer.Core.Services.IViewService,Thinktecture.IdentityServer.Core.Validation.AuthorizeRequestValidator,Thinktecture.IdentityServer.Core.ResponseHandling.AuthorizeResponseGenerator,Thinktecture.IdentityServer.Core.ResponseHandling.AuthorizeInteractionResponseGenerator,Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions,Thinktecture.IdentityServer.Core.Services.ILocalizationService,Thinktecture.IdentityServer.Core.Services.IEventService,Thinktecture.IdentityServer.Core.Configuration.Hosting.AntiForgeryToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Endpoints.AuthorizeEndpointController"/> class.
            </summary>
            <param name="viewService">The view service.</param>
            <param name="validator">The validator.</param>
            <param name="responseGenerator">The response generator.</param>
            <param name="interactionGenerator">The interaction generator.</param>
            <param name="options">The options.</param>
            <param name="localizationService">The localization service.</param>
            <param name="events">The event service.</param>
            <param name="antiForgeryToken">The anti forgery token.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.AuthorizeEndpointController.Get(System.Net.Http.HttpRequestMessage)">
            <summary>
            GET
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Endpoints.TokenEndpointController">
            <summary>
            OAuth2/OpenID Conect token endpoint
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.TokenEndpointController.#ctor(Thinktecture.IdentityServer.Core.Configuration.IdentityServerOptions,Thinktecture.IdentityServer.Core.Validation.TokenRequestValidator,Thinktecture.IdentityServer.Core.Validation.ClientValidator,Thinktecture.IdentityServer.Core.ResponseHandling.TokenResponseGenerator,Thinktecture.IdentityServer.Core.Services.IEventService)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Endpoints.TokenEndpointController"/> class.
            </summary>
            <param name="options">The options.</param>
            <param name="requestValidator">The request validator.</param>
            <param name="clientValidator">The client validator.</param>
            <param name="generator">The generator.</param>
            <param name="events">The events service.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.TokenEndpointController.Post">
            <summary>
            POST
            </summary>
            <returns>Token response</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Endpoints.TokenEndpointController.ProcessAsync(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes the token request
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Token response</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Resources.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.ClientIdRequired">
            <summary>
              Looks up a localized string similar to Client identifier is required.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.ExternalProviderError">
            <summary>
              Looks up a localized string similar to There was an error logging into the external provider. The error message is: {0}.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.invalid_request">
            <summary>
              Looks up a localized string similar to The client application made an invalid request..
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.invalid_scope">
            <summary>
              Looks up a localized string similar to The client application tried to access a resource it does not have access to..
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.InvalidUsernameOrPassword">
            <summary>
              Looks up a localized string similar to Invalid username or password.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.MissingClientId">
            <summary>
              Looks up a localized string similar to client_id is missing.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.MissingToken">
            <summary>
              Looks up a localized string similar to Token is missing.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.MustSelectAtLeastOnePermission">
            <summary>
              Looks up a localized string similar to Must select at least one permission..
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.NoExternalProvider">
            <summary>
              Looks up a localized string similar to The external login provider was not provided..
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.NoMatchingExternalAccount">
            <summary>
              Looks up a localized string similar to Invalid Account.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.NoSignInCookie">
            <summary>
              Looks up a localized string similar to There is an error determining which application you are signing into. Return to the application and try again..
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.NoSubjectFromExternalProvider">
            <summary>
              Looks up a localized string similar to Error authenticating with external provider.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.PasswordRequired">
            <summary>
              Looks up a localized string similar to Password is required.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.SslRequired">
            <summary>
              Looks up a localized string similar to SSL is required.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.unauthorized_client">
            <summary>
              Looks up a localized string similar to The client application is not known or is not authorized..
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.UnexpectedError">
            <summary>
              Looks up a localized string similar to There was an unexpected error.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.unsupported_response_type">
            <summary>
              Looks up a localized string similar to The authorization server does not support the requested response type..
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.UnsupportedMediaType">
            <summary>
              Looks up a localized string similar to Unsupported Media Type.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Resources.Messages.UsernameRequired">
            <summary>
              Looks up a localized string similar to Username is required.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.TwitterClaimsFilter">
            <summary>
            Claims filter for twitter. Filters out the "urn:twitter:userid" claim.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.TwitterClaimsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.TwitterClaimsFilter"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.TwitterClaimsFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.TwitterClaimsFilter"/> class.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.TwitterClaimsFilter.TransformClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Transforms the claims.
            </summary>
            <param name="claims">The claims.</param>
            <returns>Transformed claims</returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryRefreshTokenStore">
            <summary>
            In-memory refresh token store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryRefreshTokenStore.StoreAsync(System.String,Thinktecture.IdentityServer.Core.Models.RefreshToken)">
            <summary>
            Stores the data.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryRefreshTokenStore.GetAsync(System.String)">
            <summary>
            Retrieves the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryRefreshTokenStore.RemoveAsync(System.String)">
            <summary>
            Removes the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryRefreshTokenStore.GetAllAsync(System.String)">
            <summary>
            Retrieves all data for a subject identifier.
            </summary>
            <param name="subject">The subject identifier.</param>
            <returns>
            A list of token metadata
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryRefreshTokenStore.RevokeAsync(System.String,System.String)">
            <summary>
            Revokes all data for a client and subject id combination.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.IConsentService">
            <summary>
            Service to retrieve and update consent.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IConsentService.RequiresConsentAsync(Thinktecture.IdentityServer.Core.Models.Client,System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Checks if consent is required.
            </summary>
            <param name="client">The client.</param>
            <param name="subject">The user.</param>
            <param name="scopes">The scopes.</param>
            <returns>Boolean if consent is required.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.IConsentService.UpdateConsentAsync(Thinktecture.IdentityServer.Core.Models.Client,System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the consent.
            </summary>
            <param name="client">The client.</param>
            <param name="subject">The subject.</param>
            <param name="scopes">The scopes.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryAuthorizationCodeStore">
            <summary>
            In-memory authorization code store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryAuthorizationCodeStore.StoreAsync(System.String,Thinktecture.IdentityServer.Core.Models.AuthorizationCode)">
            <summary>
            Stores the data.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryAuthorizationCodeStore.GetAsync(System.String)">
            <summary>
            Retrieves the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryAuthorizationCodeStore.RemoveAsync(System.String)">
            <summary>
            Removes the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryAuthorizationCodeStore.GetAllAsync(System.String)">
            <summary>
            Retrieves all data for a subject identifier.
            </summary>
            <param name="subject">The subject identifier.</param>
            <returns>
            A list of token metadata
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryAuthorizationCodeStore.RevokeAsync(System.String,System.String)">
            <summary>
            Revokes all data for a client and subject id combination.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryClientStore">
            <summary>
            In-memory client store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryClientStore.#ctor(System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Client})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryClientStore"/> class.
            </summary>
            <param name="clients">The clients.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryClientStore.FindClientByIdAsync(System.String)">
            <summary>
            Finds a client by id
            </summary>
            <param name="clientId">The client id</param>
            <returns>
            The client
            </returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultConsentService">
            <summary>
            Default consent service
            </summary>
        </member>
        <member name="F:Thinktecture.IdentityServer.Core.Services.Default.DefaultConsentService._store">
            <summary>
            The consent store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultConsentService.#ctor(Thinktecture.IdentityServer.Core.Services.IConsentStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.Default.DefaultConsentService"/> class.
            </summary>
            <param name="store">The consent store.</param>
            <exception cref="T:System.ArgumentNullException">store</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultConsentService.RequiresConsentAsync(Thinktecture.IdentityServer.Core.Models.Client,System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Checks if consent is required.
            </summary>
            <param name="client">The client.</param>
            <param name="subject">The user.</param>
            <param name="scopes">The scopes.</param>
            <returns>Boolean if consent is required.</returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.Default.DefaultConsentService.UpdateConsentAsync(Thinktecture.IdentityServer.Core.Models.Client,System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the consent.
            </summary>
            <param name="client">The client.</param>
            <param name="subject">The subject.</param>
            <param name="scopes">The scopes.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryScopeStore">
            <summary>
            In-memory scope store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryScopeStore.#ctor(System.Collections.Generic.IEnumerable{Thinktecture.IdentityServer.Core.Models.Scope})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryScopeStore"/> class.
            </summary>
            <param name="scopes">The scopes.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryScopeStore.FindScopesAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all scopes.
            </summary>
            <returns>
            List of scopes
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryScopeStore.GetScopesAsync(System.Boolean)">
            <summary>
            Gets all defined scopes.
            </summary>
            <param name="publicOnly">if set to <c>true</c> only public scopes are returned.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryTokenHandleStore">
            <summary>
            In-memory token handle store
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryTokenHandleStore.StoreAsync(System.String,Thinktecture.IdentityServer.Core.Models.Token)">
            <summary>
            Stores the data.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryTokenHandleStore.GetAsync(System.String)">
            <summary>
            Retrieves the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryTokenHandleStore.RemoveAsync(System.String)">
            <summary>
            Removes the data.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryTokenHandleStore.GetAllAsync(System.String)">
            <summary>
            Retrieves all data for a subject identifier.
            </summary>
            <param name="subject">The subject identifier.</param>
            <returns>
            A list of token metadata
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryTokenHandleStore.RevokeAsync(System.String,System.String)">
            <summary>
            Revokes all data for a client and subject id combination.
            </summary>
            <param name="subject">The subject.</param>
            <param name="client">The client.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser">
            <summary>
            In-memory user
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>
            The username.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.ProviderId">
            <summary>
            Gets or sets the provider identifier.
            </summary>
            <value>
            The provider identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser.Claims">
            <summary>
            Gets or sets the claims.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService">
            <summary>
            In-memory user service
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.#ctor(System.Collections.Generic.List{Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser})">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService"/> class.
            </summary>
            <param name="users">The users.</param>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.PreAuthenticateAsync(Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This methods gets called before the login page is shown. This allows you to authenticate the user somehow based on data coming from the host (e.g. client certificates or trusted headers)
            </summary>
            <param name="message">The signin message.</param>
            <returns>
            The authentication result or null to continue the flow
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.AuthenticateLocalAsync(System.String,System.String,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This methods gets called for local authentication (whenever the user uses the username and password dialog).
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="message">The signin message.</param>
            <returns>
            The authentication result
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.AuthenticateExternalAsync(Thinktecture.IdentityServer.Core.Models.ExternalIdentity,Thinktecture.IdentityServer.Core.Models.SignInMessage)">
            <summary>
            This method gets called when the user uses an external identity provider to authenticate.
            </summary>
            <param name="externalUser">The external user.</param>
            <param name="message">The signin message.</param>
            <returns>
            The authentication result.
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.GetProfileDataAsync(System.Security.Claims.ClaimsPrincipal,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This method is called whenever claims about the user are requested (e.g. during token creation or via the userinfo endpoint)
            </summary>
            <param name="subject">The subject.</param>
            <param name="requestedClaimTypes">The requested claim types.</param>
            <returns>
            Claims
            </returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.IsActiveAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            This method gets called whenever identity server needs to determine if the user is valid or active (e.g. during token issuance or validation)
            </summary>
            <param name="subject">The subject.</param>
            <returns>
            true or false
            </returns>
            <exception cref="T:System.ArgumentNullException">subject</exception>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.SignOutAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            This method gets called when the user signs out (allows to cleanup resources)
            </summary>
            <param name="subject">The subject.</param>
            <returns></returns>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUserService.GetDisplayName(Thinktecture.IdentityServer.Core.Services.InMemory.InMemoryUser)">
            <summary>
            Retrieves the display name.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.Scope">
            <summary>
            Models are resource (either identity resource or web api resource)
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.Scope.#ctor">
            <summary>
            Creates a Scope with default values
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.Enabled">
            <summary>
            Indicates if scope is enabled and can be requested. Defaults to true.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.Name">
            <summary>
            Name of the scope. This is the value a client will use to request the scope.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.DisplayName">
            <summary>
            Display name. This value will be used e.g. on the consent screen.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.Description">
            <summary>
            Description. This value will be used e.g. on the consent screen.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.Required">
            <summary>
            Specifies whether the user can de-select the scope on the consent screen. Defaults to false.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.Emphasize">
            <summary>
            Specifies whether the consent screen will emphasize this scope. Use this setting for sensitive or important scopes. Defaults to false.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.Type">
            <summary>
            Specifies whether this scope is about identity information from the userinfo endpoint, or a resource (e.g. a Web API). Defaults to Resource.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.Claims">
            <summary>
            List of user claims that should be included in the identity (identity scope) or access token (resource scope). 
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.IncludeAllClaimsForUser">
            <summary>
            If enabled, all claims for the user will be included in the token. Defaults to false.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.ClaimsRule">
            <summary>
            Rule for determining which claims should be included in the token (this is implementation specific)
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Scope.ShowInDiscoveryDocument">
            <summary>
            Specifies whether this scope is shown in the discovery document. Defaults to true.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.ScopeClaim">
            <summary>
            Models a claim that should be emitted in a token
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.ScopeClaim.#ctor">
            <summary>
            Creates an empty ScopeClaim
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.ScopeClaim.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a ScopeClaim with parameters
            </summary>
            <param name="name">Name of the claim</param>
            <param name="alwaysInclude">Specifies whether this claim should always be present in the identity token (even if an access token has been requested as well). Applies to identity scopes only.</param>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ScopeClaim.Name">
            <summary>
            Name of the claim
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ScopeClaim.Description">
            <summary>
            Description of the claim
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.ScopeClaim.AlwaysIncludeInIdToken">
            <summary>
            Specifies whether this claim should always be present in the identity token (even if an access token has been requested as well). Applies to identity scopes only. Defaults to false.
            </summary>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.Token">
            <summary>
            Models a token.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.Token.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.Token"/> class.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.Token.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.Token"/> class.
            </summary>
            <param name="tokenType">Type of the token.</param>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Audience">
            <summary>
            Gets or sets the audience.
            </summary>
            <value>
            The audience.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Issuer">
            <summary>
            Gets or sets the issuer.
            </summary>
            <value>
            The issuer.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Lifetime">
            <summary>
            Gets or sets the lifetime.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Claims">
            <summary>
            Gets or sets the claims.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.SubjectId">
            <summary>
            Gets the subject identifier.
            </summary>
            <value>
            The subject identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.Token.Scopes">
            <summary>
            Gets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest">
            <summary>
            Models a validated request to the authorize endpoint.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.ResponseType">
            <summary>
            Gets or sets the type of the response.
            </summary>
            <value>
            The type of the response.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.ResponseMode">
            <summary>
            Gets or sets the response mode.
            </summary>
            <value>
            The response mode.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.Flow">
            <summary>
            Gets or sets the flow.
            </summary>
            <value>
            The flow.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.RedirectUri">
            <summary>
            Gets or sets the redirect URI.
            </summary>
            <value>
            The redirect URI.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.RequestedScopes">
            <summary>
            Gets or sets the requested scopes.
            </summary>
            <value>
            The requested scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.WasConsentShown">
            <summary>
            Gets or sets a value indicating whether consent was shown.
            </summary>
            <value>
              <c>true</c> if consent was shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.UiLocales">
            <summary>
            Gets or sets the UI locales.
            </summary>
            <value>
            The UI locales.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.IsOpenIdRequest">
            <summary>
            Gets or sets a value indicating whether the request was an OpenID Connect request.
            </summary>
            <value>
            <c>true</c> if the request was an OpenID Connect request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.IsResourceRequest">
            <summary>
            Gets or sets a value indicating whether this instance is resource request.
            </summary>
            <value>
            <c>true</c> if this instance is resource request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.Nonce">
            <summary>
            Gets or sets the nonce.
            </summary>
            <value>
            The nonce.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.AuthenticationContextReferenceClasses">
            <summary>
            Gets or sets the authentication context reference classes.
            </summary>
            <value>
            The authentication context reference classes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.DisplayMode">
            <summary>
            Gets or sets the display mode.
            </summary>
            <value>
            The display mode.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.PromptMode">
            <summary>
            Gets or sets the prompt mode.
            </summary>
            <value>
            The prompt mode.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.MaxAge">
            <summary>
            Gets or sets the maximum age.
            </summary>
            <value>
            The maximum age.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.LoginHint">
            <summary>
            Gets or sets the login hint.
            </summary>
            <value>
            The login hint.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.SessionId">
            <summary>
            Gets or sets the session identifier.
            </summary>
            <value>
            The session identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedAuthorizeRequest.AccessTokenRequested">
            <summary>
            Gets a value indicating whether an access token was requested.
            </summary>
            <value>
            <c>true</c> if an access token was requested; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest">
            <summary>
            Models a validated request to the token endpoint.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.GrantType">
            <summary>
            Gets or sets the type of the grant.
            </summary>
            <value>
            The type of the grant.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.Scopes">
            <summary>
            Gets or sets the scopes.
            </summary>
            <value>
            The scopes.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.UserName">
            <summary>
            Gets or sets the username used in the request.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.SignInMessage">
            <summary>
            Gets or sets the sign in message.
            </summary>
            <value>
            The sign in message.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.RefreshToken">
            <summary>
            Gets or sets the refresh token.
            </summary>
            <value>
            The refresh token.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.RefreshTokenHandle">
            <summary>
            Gets or sets the refresh token handle.
            </summary>
            <value>
            The refresh token handle.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.AuthorizationCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
            <value>
            The authorization code.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidatedTokenRequest.AuthorizationCodeHandle">
            <summary>
            Gets or sets the authorization code handle.
            </summary>
            <value>
            The authorization code handle.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Validation.ValidationResult">
            <summary>
            Models the validation result of authorize and token requests.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Validation.ValidationResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Validation.ValidationResult"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidationResult.IsError">
            <summary>
            Gets or sets a value indicating whether this instance is error.
            </summary>
            <value>
              <c>true</c> if this instance is error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidationResult.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Validation.ValidationResult.ErrorType">
            <summary>
            Gets or sets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.Models.SignInMessage">
            <summary>
            Represents contextual information about a login request.
            </summary>
        </member>
        <member name="M:Thinktecture.IdentityServer.Core.Models.SignInMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.IdentityServer.Core.Models.SignInMessage"/> class.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.ReturnUrl">
            <summary>
            The return URL to return to after authentication. If the login request is part of an authorization request, then this will be populated.
            </summary>
            <value>
            The return URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.ClientId">
            <summary>
            The client identifier that initiated the request.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.IdP">
            <summary>
            The external identity provider requested. This is used to bypass home realm 
            discovery (HRD). This is provided via the <c>"idp:"</c> prefix to the <c>acr</c> 
            parameter on the authorize request.
            </summary>
            <value>
            The external identity provider identifier.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.Tenant">
            <summary>
            The tenant requested. This is provided via the <c>"tenant:"</c> prefix to 
            the <c>acr</c> parameter on the authorize request.
            </summary>
            <value>
            The tenant.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.LoginHint">
            <summary>
            The expected username the user will use to login. This is requested from the client 
            via the <c>login_hint</c> parameter on the authorize request.
            </summary>
            <value>
            The LoginHint.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.DisplayMode">
            <summary>
            The display mode passed from the authorization request.
            </summary>
            <value>
            The display mode.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.UiLocales">
            <summary>
            The UI locales passed from the authorization request.
            </summary>
            <value>
            The UI locales.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.Models.SignInMessage.AcrValues">
            <summary>
            The acr values passed from the authorization request.
            </summary>
            <value>
            The acr values.
            </value>
        </member>
        <member name="T:Thinktecture.IdentityServer.Core.ViewModels.ClientPermissionsViewModel">
            <summary>
            Models the data needed to render the client permissions page.
            </summary>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ClientPermissionsViewModel.RevokePermissionUrl">
            <summary>
            The URL to POST to revoke client permissions. <see cref="T:Thinktecture.IdentityServer.Core.ViewModels.RevokeClientPermission"/> for the model for the submitted data.
            </summary>
            <value>
            The revoke permission URL.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ClientPermissionsViewModel.Clients">
            <summary>
            The list of clients and their permissions for the current logged in user.
            </summary>
            <value>
            The clients.
            </value>
        </member>
        <member name="P:Thinktecture.IdentityServer.Core.ViewModels.ClientPermissionsViewModel.AntiForgery">
            <summary>
            The anti forgery values.
            </summary>
            <value>
            The anti forgery.
            </value>
        </member>
    </members>
</doc>
